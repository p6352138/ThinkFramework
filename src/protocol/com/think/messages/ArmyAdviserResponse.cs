/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ArmyAdviserResponse : TBase
  {
    private int _id;
    private byte _state;
    private string _name;
    private byte _trait;
    private int _level;
    private int _iconID;
    private int _image;
    private string _description;
    private List<ArmyAdviserConditionResponse> _conditionList;
    private List<ArmyAdviserSkillResponse> _skillList;
    private int _qiaoDaoNum;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public byte State
    {
      get
      {
        return _state;
      }
      set
      {
        __isset.state = true;
        this._state = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public byte Trait
    {
      get
      {
        return _trait;
      }
      set
      {
        __isset.trait = true;
        this._trait = value;
      }
    }

    public int Level
    {
      get
      {
        return _level;
      }
      set
      {
        __isset.level = true;
        this._level = value;
      }
    }

    public int IconID
    {
      get
      {
        return _iconID;
      }
      set
      {
        __isset.iconID = true;
        this._iconID = value;
      }
    }

    public int Image
    {
      get
      {
        return _image;
      }
      set
      {
        __isset.image = true;
        this._image = value;
      }
    }

    public string Description
    {
      get
      {
        return _description;
      }
      set
      {
        __isset.description = true;
        this._description = value;
      }
    }

    public List<ArmyAdviserConditionResponse> ConditionList
    {
      get
      {
        return _conditionList;
      }
      set
      {
        __isset.conditionList = true;
        this._conditionList = value;
      }
    }

    public List<ArmyAdviserSkillResponse> SkillList
    {
      get
      {
        return _skillList;
      }
      set
      {
        __isset.skillList = true;
        this._skillList = value;
      }
    }

    public int QiaoDaoNum
    {
      get
      {
        return _qiaoDaoNum;
      }
      set
      {
        __isset.qiaoDaoNum = true;
        this._qiaoDaoNum = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool id;
      public bool state;
      public bool name;
      public bool trait;
      public bool level;
      public bool iconID;
      public bool image;
      public bool description;
      public bool conditionList;
      public bool skillList;
      public bool qiaoDaoNum;
    }

    public ArmyAdviserResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Byte) {
              State = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Byte) {
              Trait = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Level = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              IconID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Image = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              Description = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.List) {
              {
                ConditionList = new List<ArmyAdviserConditionResponse>();
                TList _list678 = iprot.ReadListBegin();
                for( int _i679 = 0; _i679 < _list678.Count; ++_i679)
                {
                  ArmyAdviserConditionResponse _elem680 = new ArmyAdviserConditionResponse();
                  _elem680 = new ArmyAdviserConditionResponse();
                  _elem680.Read(iprot);
                  ConditionList.Add(_elem680);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.List) {
              {
                SkillList = new List<ArmyAdviserSkillResponse>();
                TList _list681 = iprot.ReadListBegin();
                for( int _i682 = 0; _i682 < _list681.Count; ++_i682)
                {
                  ArmyAdviserSkillResponse _elem683 = new ArmyAdviserSkillResponse();
                  _elem683 = new ArmyAdviserSkillResponse();
                  _elem683.Read(iprot);
                  SkillList.Add(_elem683);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              QiaoDaoNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ArmyAdviserResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.state) {
        field.Name = "state";
        field.Type = TType.Byte;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(State);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (__isset.trait) {
        field.Name = "trait";
        field.Type = TType.Byte;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Trait);
        oprot.WriteFieldEnd();
      }
      if (__isset.level) {
        field.Name = "level";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Level);
        oprot.WriteFieldEnd();
      }
      if (__isset.iconID) {
        field.Name = "iconID";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(IconID);
        oprot.WriteFieldEnd();
      }
      if (__isset.image) {
        field.Name = "image";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Image);
        oprot.WriteFieldEnd();
      }
      if (Description != null && __isset.description) {
        field.Name = "description";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Description);
        oprot.WriteFieldEnd();
      }
      if (ConditionList != null && __isset.conditionList) {
        field.Name = "conditionList";
        field.Type = TType.List;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, ConditionList.Count));
          foreach (ArmyAdviserConditionResponse _iter684 in ConditionList)
          {
            _iter684.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (SkillList != null && __isset.skillList) {
        field.Name = "skillList";
        field.Type = TType.List;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, SkillList.Count));
          foreach (ArmyAdviserSkillResponse _iter685 in SkillList)
          {
            _iter685.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.qiaoDaoNum) {
        field.Name = "qiaoDaoNum";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(QiaoDaoNum);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ArmyAdviserResponse(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",State: ");
      sb.Append(State);
      sb.Append(",Name: ");
      sb.Append(Name);
      sb.Append(",Trait: ");
      sb.Append(Trait);
      sb.Append(",Level: ");
      sb.Append(Level);
      sb.Append(",IconID: ");
      sb.Append(IconID);
      sb.Append(",Image: ");
      sb.Append(Image);
      sb.Append(",Description: ");
      sb.Append(Description);
      sb.Append(",ConditionList: ");
      sb.Append(ConditionList);
      sb.Append(",SkillList: ");
      sb.Append(SkillList);
      sb.Append(",QiaoDaoNum: ");
      sb.Append(QiaoDaoNum);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
