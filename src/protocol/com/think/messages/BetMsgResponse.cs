/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class BetMsgResponse : TBase
  {
    private int _against_id;
    private int _user_id;
    private string _user_name;
    private int _user_level;
    private int _user_fighting_capacity;
    private int _body_price;
    private int _target_user_id;
    private string _target_name;
    private int _target_level;
    private int _target_fighting_capacity;
    private int _target_body_price;
    private int _bet_money_one;
    private int _bet_money_two;
    private int _bet_money_three;
    private int _user_server_id;
    private int _target_user_server_id;

    public int Against_id
    {
      get
      {
        return _against_id;
      }
      set
      {
        __isset.against_id = true;
        this._against_id = value;
      }
    }

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public string User_name
    {
      get
      {
        return _user_name;
      }
      set
      {
        __isset.user_name = true;
        this._user_name = value;
      }
    }

    public int User_level
    {
      get
      {
        return _user_level;
      }
      set
      {
        __isset.user_level = true;
        this._user_level = value;
      }
    }

    public int User_fighting_capacity
    {
      get
      {
        return _user_fighting_capacity;
      }
      set
      {
        __isset.user_fighting_capacity = true;
        this._user_fighting_capacity = value;
      }
    }

    public int Body_price
    {
      get
      {
        return _body_price;
      }
      set
      {
        __isset.body_price = true;
        this._body_price = value;
      }
    }

    public int Target_user_id
    {
      get
      {
        return _target_user_id;
      }
      set
      {
        __isset.target_user_id = true;
        this._target_user_id = value;
      }
    }

    public string Target_name
    {
      get
      {
        return _target_name;
      }
      set
      {
        __isset.target_name = true;
        this._target_name = value;
      }
    }

    public int Target_level
    {
      get
      {
        return _target_level;
      }
      set
      {
        __isset.target_level = true;
        this._target_level = value;
      }
    }

    public int Target_fighting_capacity
    {
      get
      {
        return _target_fighting_capacity;
      }
      set
      {
        __isset.target_fighting_capacity = true;
        this._target_fighting_capacity = value;
      }
    }

    public int Target_body_price
    {
      get
      {
        return _target_body_price;
      }
      set
      {
        __isset.target_body_price = true;
        this._target_body_price = value;
      }
    }

    public int Bet_money_one
    {
      get
      {
        return _bet_money_one;
      }
      set
      {
        __isset.bet_money_one = true;
        this._bet_money_one = value;
      }
    }

    public int Bet_money_two
    {
      get
      {
        return _bet_money_two;
      }
      set
      {
        __isset.bet_money_two = true;
        this._bet_money_two = value;
      }
    }

    public int Bet_money_three
    {
      get
      {
        return _bet_money_three;
      }
      set
      {
        __isset.bet_money_three = true;
        this._bet_money_three = value;
      }
    }

    public int User_server_id
    {
      get
      {
        return _user_server_id;
      }
      set
      {
        __isset.user_server_id = true;
        this._user_server_id = value;
      }
    }

    public int Target_user_server_id
    {
      get
      {
        return _target_user_server_id;
      }
      set
      {
        __isset.target_user_server_id = true;
        this._target_user_server_id = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool against_id;
      public bool user_id;
      public bool user_name;
      public bool user_level;
      public bool user_fighting_capacity;
      public bool body_price;
      public bool target_user_id;
      public bool target_name;
      public bool target_level;
      public bool target_fighting_capacity;
      public bool target_body_price;
      public bool bet_money_one;
      public bool bet_money_two;
      public bool bet_money_three;
      public bool user_server_id;
      public bool target_user_server_id;
    }

    public BetMsgResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Against_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              User_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              User_level = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              User_fighting_capacity = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Body_price = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Target_user_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              Target_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Target_level = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Target_fighting_capacity = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Target_body_price = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              Bet_money_one = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              Bet_money_two = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.I32) {
              Bet_money_three = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              User_server_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.I32) {
              Target_user_server_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("BetMsgResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.against_id) {
        field.Name = "against_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Against_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (User_name != null && __isset.user_name) {
        field.Name = "user_name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(User_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_level) {
        field.Name = "user_level";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_level);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_fighting_capacity) {
        field.Name = "user_fighting_capacity";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_fighting_capacity);
        oprot.WriteFieldEnd();
      }
      if (__isset.body_price) {
        field.Name = "body_price";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Body_price);
        oprot.WriteFieldEnd();
      }
      if (__isset.target_user_id) {
        field.Name = "target_user_id";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Target_user_id);
        oprot.WriteFieldEnd();
      }
      if (Target_name != null && __isset.target_name) {
        field.Name = "target_name";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Target_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.target_level) {
        field.Name = "target_level";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Target_level);
        oprot.WriteFieldEnd();
      }
      if (__isset.target_fighting_capacity) {
        field.Name = "target_fighting_capacity";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Target_fighting_capacity);
        oprot.WriteFieldEnd();
      }
      if (__isset.target_body_price) {
        field.Name = "target_body_price";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Target_body_price);
        oprot.WriteFieldEnd();
      }
      if (__isset.bet_money_one) {
        field.Name = "bet_money_one";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Bet_money_one);
        oprot.WriteFieldEnd();
      }
      if (__isset.bet_money_two) {
        field.Name = "bet_money_two";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Bet_money_two);
        oprot.WriteFieldEnd();
      }
      if (__isset.bet_money_three) {
        field.Name = "bet_money_three";
        field.Type = TType.I32;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Bet_money_three);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_server_id) {
        field.Name = "user_server_id";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_server_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.target_user_server_id) {
        field.Name = "target_user_server_id";
        field.Type = TType.I32;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Target_user_server_id);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("BetMsgResponse(");
      sb.Append("Against_id: ");
      sb.Append(Against_id);
      sb.Append(",User_id: ");
      sb.Append(User_id);
      sb.Append(",User_name: ");
      sb.Append(User_name);
      sb.Append(",User_level: ");
      sb.Append(User_level);
      sb.Append(",User_fighting_capacity: ");
      sb.Append(User_fighting_capacity);
      sb.Append(",Body_price: ");
      sb.Append(Body_price);
      sb.Append(",Target_user_id: ");
      sb.Append(Target_user_id);
      sb.Append(",Target_name: ");
      sb.Append(Target_name);
      sb.Append(",Target_level: ");
      sb.Append(Target_level);
      sb.Append(",Target_fighting_capacity: ");
      sb.Append(Target_fighting_capacity);
      sb.Append(",Target_body_price: ");
      sb.Append(Target_body_price);
      sb.Append(",Bet_money_one: ");
      sb.Append(Bet_money_one);
      sb.Append(",Bet_money_two: ");
      sb.Append(Bet_money_two);
      sb.Append(",Bet_money_three: ");
      sb.Append(Bet_money_three);
      sb.Append(",User_server_id: ");
      sb.Append(User_server_id);
      sb.Append(",Target_user_server_id: ");
      sb.Append(Target_user_server_id);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
