/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class BloodyBattleRequest : TBase
  {
    private byte _reqType;
    private int _dungeonId;
    private int _dungeonMapID;
    private int _dungeon_general_id;
    private int _general_id;
    private byte _site;
    private int _friend_user_id;

    public byte ReqType
    {
      get
      {
        return _reqType;
      }
      set
      {
        __isset.reqType = true;
        this._reqType = value;
      }
    }

    public int DungeonId
    {
      get
      {
        return _dungeonId;
      }
      set
      {
        __isset.dungeonId = true;
        this._dungeonId = value;
      }
    }

    public int DungeonMapID
    {
      get
      {
        return _dungeonMapID;
      }
      set
      {
        __isset.dungeonMapID = true;
        this._dungeonMapID = value;
      }
    }

    public int Dungeon_general_id
    {
      get
      {
        return _dungeon_general_id;
      }
      set
      {
        __isset.dungeon_general_id = true;
        this._dungeon_general_id = value;
      }
    }

    public int General_id
    {
      get
      {
        return _general_id;
      }
      set
      {
        __isset.general_id = true;
        this._general_id = value;
      }
    }

    public byte Site
    {
      get
      {
        return _site;
      }
      set
      {
        __isset.site = true;
        this._site = value;
      }
    }

    public int Friend_user_id
    {
      get
      {
        return _friend_user_id;
      }
      set
      {
        __isset.friend_user_id = true;
        this._friend_user_id = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool reqType;
      public bool dungeonId;
      public bool dungeonMapID;
      public bool dungeon_general_id;
      public bool general_id;
      public bool site;
      public bool friend_user_id;
    }

    public BloodyBattleRequest() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              ReqType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              DungeonId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              DungeonMapID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Dungeon_general_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              General_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Byte) {
              Site = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Friend_user_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("BloodyBattleRequest");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.reqType) {
        field.Name = "reqType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ReqType);
        oprot.WriteFieldEnd();
      }
      if (__isset.dungeonId) {
        field.Name = "dungeonId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DungeonId);
        oprot.WriteFieldEnd();
      }
      if (__isset.dungeonMapID) {
        field.Name = "dungeonMapID";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DungeonMapID);
        oprot.WriteFieldEnd();
      }
      if (__isset.dungeon_general_id) {
        field.Name = "dungeon_general_id";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dungeon_general_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.general_id) {
        field.Name = "general_id";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.site) {
        field.Name = "site";
        field.Type = TType.Byte;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Site);
        oprot.WriteFieldEnd();
      }
      if (__isset.friend_user_id) {
        field.Name = "friend_user_id";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Friend_user_id);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("BloodyBattleRequest(");
      sb.Append("ReqType: ");
      sb.Append(ReqType);
      sb.Append(",DungeonId: ");
      sb.Append(DungeonId);
      sb.Append(",DungeonMapID: ");
      sb.Append(DungeonMapID);
      sb.Append(",Dungeon_general_id: ");
      sb.Append(Dungeon_general_id);
      sb.Append(",General_id: ");
      sb.Append(General_id);
      sb.Append(",Site: ");
      sb.Append(Site);
      sb.Append(",Friend_user_id: ");
      sb.Append(Friend_user_id);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
