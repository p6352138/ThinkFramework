/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class BorrowGeneralResponse : TBase
  {
    private int _general_id;
    private string _general_name;
    private string _general_speak;
    private int _opration_id;
    private int _general_icon;

    public int General_id
    {
      get
      {
        return _general_id;
      }
      set
      {
        __isset.general_id = true;
        this._general_id = value;
      }
    }

    public string General_name
    {
      get
      {
        return _general_name;
      }
      set
      {
        __isset.general_name = true;
        this._general_name = value;
      }
    }

    public string General_speak
    {
      get
      {
        return _general_speak;
      }
      set
      {
        __isset.general_speak = true;
        this._general_speak = value;
      }
    }

    public int Opration_id
    {
      get
      {
        return _opration_id;
      }
      set
      {
        __isset.opration_id = true;
        this._opration_id = value;
      }
    }

    public int General_icon
    {
      get
      {
        return _general_icon;
      }
      set
      {
        __isset.general_icon = true;
        this._general_icon = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool general_id;
      public bool general_name;
      public bool general_speak;
      public bool opration_id;
      public bool general_icon;
    }

    public BorrowGeneralResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              General_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              General_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              General_speak = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Opration_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              General_icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("BorrowGeneralResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.general_id) {
        field.Name = "general_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_id);
        oprot.WriteFieldEnd();
      }
      if (General_name != null && __isset.general_name) {
        field.Name = "general_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(General_name);
        oprot.WriteFieldEnd();
      }
      if (General_speak != null && __isset.general_speak) {
        field.Name = "general_speak";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(General_speak);
        oprot.WriteFieldEnd();
      }
      if (__isset.opration_id) {
        field.Name = "opration_id";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Opration_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.general_icon) {
        field.Name = "general_icon";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_icon);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("BorrowGeneralResponse(");
      sb.Append("General_id: ");
      sb.Append(General_id);
      sb.Append(",General_name: ");
      sb.Append(General_name);
      sb.Append(",General_speak: ");
      sb.Append(General_speak);
      sb.Append(",Opration_id: ");
      sb.Append(Opration_id);
      sb.Append(",General_icon: ");
      sb.Append(General_icon);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
