/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class CDTimeListResponse : TBase
  {
    private List<CDTimeResponse> _cdTimeResponseList;

    public List<CDTimeResponse> CdTimeResponseList
    {
      get
      {
        return _cdTimeResponseList;
      }
      set
      {
        __isset.cdTimeResponseList = true;
        this._cdTimeResponseList = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool cdTimeResponseList;
    }

    public CDTimeListResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                CdTimeResponseList = new List<CDTimeResponse>();
                TList _list246 = iprot.ReadListBegin();
                for( int _i247 = 0; _i247 < _list246.Count; ++_i247)
                {
                  CDTimeResponse _elem248 = new CDTimeResponse();
                  _elem248 = new CDTimeResponse();
                  _elem248.Read(iprot);
                  CdTimeResponseList.Add(_elem248);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CDTimeListResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (CdTimeResponseList != null && __isset.cdTimeResponseList) {
        field.Name = "cdTimeResponseList";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, CdTimeResponseList.Count));
          foreach (CDTimeResponse _iter249 in CdTimeResponseList)
          {
            _iter249.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("CDTimeListResponse(");
      sb.Append("CdTimeResponseList: ");
      sb.Append(CdTimeResponseList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
