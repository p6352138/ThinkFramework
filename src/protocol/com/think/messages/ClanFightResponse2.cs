/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanFightResponse2 : TBase
  {
    private byte _type;
    private ClanFightSimpleFightDataResponse _fightResponse;
    private ClanfightPointInsideResponse _clanfightPointInsideResponse;
    private ClanFightSimpleFightDataResponse _monsterFightResponse;
    private int _time_diff;
    private ClanFightPointPeopleListResponse _pointPeopleList;
    private ClanFightEndAwardResponse _endAward;

    public byte Type
    {
      get
      {
        return _type;
      }
      set
      {
        __isset.type = true;
        this._type = value;
      }
    }

    public ClanFightSimpleFightDataResponse FightResponse
    {
      get
      {
        return _fightResponse;
      }
      set
      {
        __isset.fightResponse = true;
        this._fightResponse = value;
      }
    }

    public ClanfightPointInsideResponse ClanfightPointInsideResponse
    {
      get
      {
        return _clanfightPointInsideResponse;
      }
      set
      {
        __isset.clanfightPointInsideResponse = true;
        this._clanfightPointInsideResponse = value;
      }
    }

    public ClanFightSimpleFightDataResponse MonsterFightResponse
    {
      get
      {
        return _monsterFightResponse;
      }
      set
      {
        __isset.monsterFightResponse = true;
        this._monsterFightResponse = value;
      }
    }

    public int Time_diff
    {
      get
      {
        return _time_diff;
      }
      set
      {
        __isset.time_diff = true;
        this._time_diff = value;
      }
    }

    public ClanFightPointPeopleListResponse PointPeopleList
    {
      get
      {
        return _pointPeopleList;
      }
      set
      {
        __isset.pointPeopleList = true;
        this._pointPeopleList = value;
      }
    }

    public ClanFightEndAwardResponse EndAward
    {
      get
      {
        return _endAward;
      }
      set
      {
        __isset.endAward = true;
        this._endAward = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool type;
      public bool fightResponse;
      public bool clanfightPointInsideResponse;
      public bool monsterFightResponse;
      public bool time_diff;
      public bool pointPeopleList;
      public bool endAward;
    }

    public ClanFightResponse2() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              Type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              FightResponse = new ClanFightSimpleFightDataResponse();
              FightResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              ClanfightPointInsideResponse = new ClanfightPointInsideResponse();
              ClanfightPointInsideResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              MonsterFightResponse = new ClanFightSimpleFightDataResponse();
              MonsterFightResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Time_diff = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Struct) {
              PointPeopleList = new ClanFightPointPeopleListResponse();
              PointPeopleList.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Struct) {
              EndAward = new ClanFightEndAwardResponse();
              EndAward.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanFightResponse2");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Type);
        oprot.WriteFieldEnd();
      }
      if (FightResponse != null && __isset.fightResponse) {
        field.Name = "fightResponse";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        FightResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ClanfightPointInsideResponse != null && __isset.clanfightPointInsideResponse) {
        field.Name = "clanfightPointInsideResponse";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        ClanfightPointInsideResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (MonsterFightResponse != null && __isset.monsterFightResponse) {
        field.Name = "monsterFightResponse";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        MonsterFightResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.time_diff) {
        field.Name = "time_diff";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Time_diff);
        oprot.WriteFieldEnd();
      }
      if (PointPeopleList != null && __isset.pointPeopleList) {
        field.Name = "pointPeopleList";
        field.Type = TType.Struct;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        PointPeopleList.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (EndAward != null && __isset.endAward) {
        field.Name = "endAward";
        field.Type = TType.Struct;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        EndAward.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanFightResponse2(");
      sb.Append("Type: ");
      sb.Append(Type);
      sb.Append(",FightResponse: ");
      sb.Append(FightResponse== null ? "<null>" : FightResponse.ToString());
      sb.Append(",ClanfightPointInsideResponse: ");
      sb.Append(ClanfightPointInsideResponse== null ? "<null>" : ClanfightPointInsideResponse.ToString());
      sb.Append(",MonsterFightResponse: ");
      sb.Append(MonsterFightResponse== null ? "<null>" : MonsterFightResponse.ToString());
      sb.Append(",Time_diff: ");
      sb.Append(Time_diff);
      sb.Append(",PointPeopleList: ");
      sb.Append(PointPeopleList== null ? "<null>" : PointPeopleList.ToString());
      sb.Append(",EndAward: ");
      sb.Append(EndAward== null ? "<null>" : EndAward.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
