/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanInviteResponse : TBase
  {
    private int _clan_id;
    private string _clan_name;
    private string _award;
    private int _icon;
    private byte _recommend;

    public int Clan_id
    {
      get
      {
        return _clan_id;
      }
      set
      {
        __isset.clan_id = true;
        this._clan_id = value;
      }
    }

    public string Clan_name
    {
      get
      {
        return _clan_name;
      }
      set
      {
        __isset.clan_name = true;
        this._clan_name = value;
      }
    }

    public string Award
    {
      get
      {
        return _award;
      }
      set
      {
        __isset.award = true;
        this._award = value;
      }
    }

    public int Icon
    {
      get
      {
        return _icon;
      }
      set
      {
        __isset.icon = true;
        this._icon = value;
      }
    }

    public byte Recommend
    {
      get
      {
        return _recommend;
      }
      set
      {
        __isset.recommend = true;
        this._recommend = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool clan_id;
      public bool clan_name;
      public bool award;
      public bool icon;
      public bool recommend;
    }

    public ClanInviteResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Clan_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Clan_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Award = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Byte) {
              Recommend = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanInviteResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.clan_id) {
        field.Name = "clan_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Clan_id);
        oprot.WriteFieldEnd();
      }
      if (Clan_name != null && __isset.clan_name) {
        field.Name = "clan_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Clan_name);
        oprot.WriteFieldEnd();
      }
      if (Award != null && __isset.award) {
        field.Name = "award";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Award);
        oprot.WriteFieldEnd();
      }
      if (__isset.icon) {
        field.Name = "icon";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Icon);
        oprot.WriteFieldEnd();
      }
      if (__isset.recommend) {
        field.Name = "recommend";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Recommend);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanInviteResponse(");
      sb.Append("Clan_id: ");
      sb.Append(Clan_id);
      sb.Append(",Clan_name: ");
      sb.Append(Clan_name);
      sb.Append(",Award: ");
      sb.Append(Award);
      sb.Append(",Icon: ");
      sb.Append(Icon);
      sb.Append(",Recommend: ");
      sb.Append(Recommend);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
