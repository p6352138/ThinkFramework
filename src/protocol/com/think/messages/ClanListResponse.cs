/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanListResponse : TBase
  {
    private List<ClanResponse> _clanList;
    private bool _isNotice;
    private bool _isWorship;
    private string _voteMsg;

    public List<ClanResponse> ClanList
    {
      get
      {
        return _clanList;
      }
      set
      {
        __isset.clanList = true;
        this._clanList = value;
      }
    }

    public bool IsNotice
    {
      get
      {
        return _isNotice;
      }
      set
      {
        __isset.isNotice = true;
        this._isNotice = value;
      }
    }

    public bool IsWorship
    {
      get
      {
        return _isWorship;
      }
      set
      {
        __isset.isWorship = true;
        this._isWorship = value;
      }
    }

    public string VoteMsg
    {
      get
      {
        return _voteMsg;
      }
      set
      {
        __isset.voteMsg = true;
        this._voteMsg = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool clanList;
      public bool isNotice;
      public bool isWorship;
      public bool voteMsg;
    }

    public ClanListResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                ClanList = new List<ClanResponse>();
                TList _list761 = iprot.ReadListBegin();
                for( int _i762 = 0; _i762 < _list761.Count; ++_i762)
                {
                  ClanResponse _elem763 = new ClanResponse();
                  _elem763 = new ClanResponse();
                  _elem763.Read(iprot);
                  ClanList.Add(_elem763);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Bool) {
              IsNotice = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Bool) {
              IsWorship = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              VoteMsg = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanListResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (ClanList != null && __isset.clanList) {
        field.Name = "clanList";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, ClanList.Count));
          foreach (ClanResponse _iter764 in ClanList)
          {
            _iter764.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.isNotice) {
        field.Name = "isNotice";
        field.Type = TType.Bool;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsNotice);
        oprot.WriteFieldEnd();
      }
      if (__isset.isWorship) {
        field.Name = "isWorship";
        field.Type = TType.Bool;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsWorship);
        oprot.WriteFieldEnd();
      }
      if (VoteMsg != null && __isset.voteMsg) {
        field.Name = "voteMsg";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(VoteMsg);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanListResponse(");
      sb.Append("ClanList: ");
      sb.Append(ClanList);
      sb.Append(",IsNotice: ");
      sb.Append(IsNotice);
      sb.Append(",IsWorship: ");
      sb.Append(IsWorship);
      sb.Append(",VoteMsg: ");
      sb.Append(VoteMsg);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
