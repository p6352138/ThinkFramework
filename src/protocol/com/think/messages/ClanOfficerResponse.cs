/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanOfficerResponse : TBase
  {
    private byte _reqType;
    private int _user_id;
    private string _user_name;
    private string _officer_name;
    private int _sex;
    private int _contribute;
    private int _vote_contribute;
    private int _vote_num;
    private string _manifesto;
    private int _image;
    private string _officer_name2;

    public byte ReqType
    {
      get
      {
        return _reqType;
      }
      set
      {
        __isset.reqType = true;
        this._reqType = value;
      }
    }

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public string User_name
    {
      get
      {
        return _user_name;
      }
      set
      {
        __isset.user_name = true;
        this._user_name = value;
      }
    }

    public string Officer_name
    {
      get
      {
        return _officer_name;
      }
      set
      {
        __isset.officer_name = true;
        this._officer_name = value;
      }
    }

    public int Sex
    {
      get
      {
        return _sex;
      }
      set
      {
        __isset.sex = true;
        this._sex = value;
      }
    }

    public int Contribute
    {
      get
      {
        return _contribute;
      }
      set
      {
        __isset.contribute = true;
        this._contribute = value;
      }
    }

    public int Vote_contribute
    {
      get
      {
        return _vote_contribute;
      }
      set
      {
        __isset.vote_contribute = true;
        this._vote_contribute = value;
      }
    }

    public int Vote_num
    {
      get
      {
        return _vote_num;
      }
      set
      {
        __isset.vote_num = true;
        this._vote_num = value;
      }
    }

    public string Manifesto
    {
      get
      {
        return _manifesto;
      }
      set
      {
        __isset.manifesto = true;
        this._manifesto = value;
      }
    }

    public int Image
    {
      get
      {
        return _image;
      }
      set
      {
        __isset.image = true;
        this._image = value;
      }
    }

    public string Officer_name2
    {
      get
      {
        return _officer_name2;
      }
      set
      {
        __isset.officer_name2 = true;
        this._officer_name2 = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool reqType;
      public bool user_id;
      public bool user_name;
      public bool officer_name;
      public bool sex;
      public bool contribute;
      public bool vote_contribute;
      public bool vote_num;
      public bool manifesto;
      public bool image;
      public bool officer_name2;
    }

    public ClanOfficerResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              ReqType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              User_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Officer_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Sex = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Contribute = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Vote_contribute = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Vote_num = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              Manifesto = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Image = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Officer_name2 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanOfficerResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.reqType) {
        field.Name = "reqType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ReqType);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (User_name != null && __isset.user_name) {
        field.Name = "user_name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(User_name);
        oprot.WriteFieldEnd();
      }
      if (Officer_name != null && __isset.officer_name) {
        field.Name = "officer_name";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Officer_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.sex) {
        field.Name = "sex";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Sex);
        oprot.WriteFieldEnd();
      }
      if (__isset.contribute) {
        field.Name = "contribute";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Contribute);
        oprot.WriteFieldEnd();
      }
      if (__isset.vote_contribute) {
        field.Name = "vote_contribute";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Vote_contribute);
        oprot.WriteFieldEnd();
      }
      if (__isset.vote_num) {
        field.Name = "vote_num";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Vote_num);
        oprot.WriteFieldEnd();
      }
      if (Manifesto != null && __isset.manifesto) {
        field.Name = "manifesto";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Manifesto);
        oprot.WriteFieldEnd();
      }
      if (__isset.image) {
        field.Name = "image";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Image);
        oprot.WriteFieldEnd();
      }
      if (Officer_name2 != null && __isset.officer_name2) {
        field.Name = "officer_name2";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Officer_name2);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanOfficerResponse(");
      sb.Append("ReqType: ");
      sb.Append(ReqType);
      sb.Append(",User_id: ");
      sb.Append(User_id);
      sb.Append(",User_name: ");
      sb.Append(User_name);
      sb.Append(",Officer_name: ");
      sb.Append(Officer_name);
      sb.Append(",Sex: ");
      sb.Append(Sex);
      sb.Append(",Contribute: ");
      sb.Append(Contribute);
      sb.Append(",Vote_contribute: ");
      sb.Append(Vote_contribute);
      sb.Append(",Vote_num: ");
      sb.Append(Vote_num);
      sb.Append(",Manifesto: ");
      sb.Append(Manifesto);
      sb.Append(",Image: ");
      sb.Append(Image);
      sb.Append(",Officer_name2: ");
      sb.Append(Officer_name2);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
