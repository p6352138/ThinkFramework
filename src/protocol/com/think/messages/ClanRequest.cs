/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanRequest : TBase
  {
    private byte _reqType;
    private int _clan_id;
    private string _user_name;
    private string _notice;
    private int _donate_money;
    private int _donate_gold;
    private byte _donate_type;

    public byte ReqType
    {
      get
      {
        return _reqType;
      }
      set
      {
        __isset.reqType = true;
        this._reqType = value;
      }
    }

    public int Clan_id
    {
      get
      {
        return _clan_id;
      }
      set
      {
        __isset.clan_id = true;
        this._clan_id = value;
      }
    }

    public string User_name
    {
      get
      {
        return _user_name;
      }
      set
      {
        __isset.user_name = true;
        this._user_name = value;
      }
    }

    public string Notice
    {
      get
      {
        return _notice;
      }
      set
      {
        __isset.notice = true;
        this._notice = value;
      }
    }

    public int Donate_money
    {
      get
      {
        return _donate_money;
      }
      set
      {
        __isset.donate_money = true;
        this._donate_money = value;
      }
    }

    public int Donate_gold
    {
      get
      {
        return _donate_gold;
      }
      set
      {
        __isset.donate_gold = true;
        this._donate_gold = value;
      }
    }

    public byte Donate_type
    {
      get
      {
        return _donate_type;
      }
      set
      {
        __isset.donate_type = true;
        this._donate_type = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool reqType;
      public bool clan_id;
      public bool user_name;
      public bool notice;
      public bool donate_money;
      public bool donate_gold;
      public bool donate_type;
    }

    public ClanRequest() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              ReqType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Clan_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              User_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Notice = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Donate_money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Donate_gold = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Byte) {
              Donate_type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanRequest");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.reqType) {
        field.Name = "reqType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ReqType);
        oprot.WriteFieldEnd();
      }
      if (__isset.clan_id) {
        field.Name = "clan_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Clan_id);
        oprot.WriteFieldEnd();
      }
      if (User_name != null && __isset.user_name) {
        field.Name = "user_name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(User_name);
        oprot.WriteFieldEnd();
      }
      if (Notice != null && __isset.notice) {
        field.Name = "notice";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Notice);
        oprot.WriteFieldEnd();
      }
      if (__isset.donate_money) {
        field.Name = "donate_money";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Donate_money);
        oprot.WriteFieldEnd();
      }
      if (__isset.donate_gold) {
        field.Name = "donate_gold";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Donate_gold);
        oprot.WriteFieldEnd();
      }
      if (__isset.donate_type) {
        field.Name = "donate_type";
        field.Type = TType.Byte;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Donate_type);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanRequest(");
      sb.Append("ReqType: ");
      sb.Append(ReqType);
      sb.Append(",Clan_id: ");
      sb.Append(Clan_id);
      sb.Append(",User_name: ");
      sb.Append(User_name);
      sb.Append(",Notice: ");
      sb.Append(Notice);
      sb.Append(",Donate_money: ");
      sb.Append(Donate_money);
      sb.Append(",Donate_gold: ");
      sb.Append(Donate_gold);
      sb.Append(",Donate_type: ");
      sb.Append(Donate_type);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
