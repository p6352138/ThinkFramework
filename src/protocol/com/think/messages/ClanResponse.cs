/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanResponse : TBase
  {
    private int _clan_id;
    private string _clan_name;
    private long _treasury_money;
    private int _worship_num;
    private string _notice;
    private List<ClanOfficerResponse> _officerList;
    private int _rule_days;
    private int _icon;

    public int Clan_id
    {
      get
      {
        return _clan_id;
      }
      set
      {
        __isset.clan_id = true;
        this._clan_id = value;
      }
    }

    public string Clan_name
    {
      get
      {
        return _clan_name;
      }
      set
      {
        __isset.clan_name = true;
        this._clan_name = value;
      }
    }

    public long Treasury_money
    {
      get
      {
        return _treasury_money;
      }
      set
      {
        __isset.treasury_money = true;
        this._treasury_money = value;
      }
    }

    public int Worship_num
    {
      get
      {
        return _worship_num;
      }
      set
      {
        __isset.worship_num = true;
        this._worship_num = value;
      }
    }

    public string Notice
    {
      get
      {
        return _notice;
      }
      set
      {
        __isset.notice = true;
        this._notice = value;
      }
    }

    public List<ClanOfficerResponse> OfficerList
    {
      get
      {
        return _officerList;
      }
      set
      {
        __isset.officerList = true;
        this._officerList = value;
      }
    }

    public int Rule_days
    {
      get
      {
        return _rule_days;
      }
      set
      {
        __isset.rule_days = true;
        this._rule_days = value;
      }
    }

    public int Icon
    {
      get
      {
        return _icon;
      }
      set
      {
        __isset.icon = true;
        this._icon = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool clan_id;
      public bool clan_name;
      public bool treasury_money;
      public bool worship_num;
      public bool notice;
      public bool officerList;
      public bool rule_days;
      public bool icon;
    }

    public ClanResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Clan_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Clan_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I64) {
              Treasury_money = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Worship_num = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Notice = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.List) {
              {
                OfficerList = new List<ClanOfficerResponse>();
                TList _list757 = iprot.ReadListBegin();
                for( int _i758 = 0; _i758 < _list757.Count; ++_i758)
                {
                  ClanOfficerResponse _elem759 = new ClanOfficerResponse();
                  _elem759 = new ClanOfficerResponse();
                  _elem759.Read(iprot);
                  OfficerList.Add(_elem759);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Rule_days = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.clan_id) {
        field.Name = "clan_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Clan_id);
        oprot.WriteFieldEnd();
      }
      if (Clan_name != null && __isset.clan_name) {
        field.Name = "clan_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Clan_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.treasury_money) {
        field.Name = "treasury_money";
        field.Type = TType.I64;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Treasury_money);
        oprot.WriteFieldEnd();
      }
      if (__isset.worship_num) {
        field.Name = "worship_num";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Worship_num);
        oprot.WriteFieldEnd();
      }
      if (Notice != null && __isset.notice) {
        field.Name = "notice";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Notice);
        oprot.WriteFieldEnd();
      }
      if (OfficerList != null && __isset.officerList) {
        field.Name = "officerList";
        field.Type = TType.List;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, OfficerList.Count));
          foreach (ClanOfficerResponse _iter760 in OfficerList)
          {
            _iter760.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.rule_days) {
        field.Name = "rule_days";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Rule_days);
        oprot.WriteFieldEnd();
      }
      if (__isset.icon) {
        field.Name = "icon";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Icon);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanResponse(");
      sb.Append("Clan_id: ");
      sb.Append(Clan_id);
      sb.Append(",Clan_name: ");
      sb.Append(Clan_name);
      sb.Append(",Treasury_money: ");
      sb.Append(Treasury_money);
      sb.Append(",Worship_num: ");
      sb.Append(Worship_num);
      sb.Append(",Notice: ");
      sb.Append(Notice);
      sb.Append(",OfficerList: ");
      sb.Append(OfficerList);
      sb.Append(",Rule_days: ");
      sb.Append(Rule_days);
      sb.Append(",Icon: ");
      sb.Append(Icon);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
