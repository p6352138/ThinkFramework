/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanfightPartScoreResponse : TBase
  {
    private int _attackScore;
    private int _defendScore;
    private int _attackEnergy;
    private int _defendEnergy;
    private int _attackContribute;
    private int _defendContribute;
    private string _attackMaxKillNumName;
    private int _attackMaxKillNum;
    private string _defendMaxKillNumName;
    private int _defendMaxKillNum;
    private int _win_money;
    private int _draw_money;
    private int _contribute;
    private string _scoreSource;
    private int _attackHp;
    private int _attackMaxHp;
    private int _defendHp;
    private int _defendMaxHp;

    public int AttackScore
    {
      get
      {
        return _attackScore;
      }
      set
      {
        __isset.attackScore = true;
        this._attackScore = value;
      }
    }

    public int DefendScore
    {
      get
      {
        return _defendScore;
      }
      set
      {
        __isset.defendScore = true;
        this._defendScore = value;
      }
    }

    public int AttackEnergy
    {
      get
      {
        return _attackEnergy;
      }
      set
      {
        __isset.attackEnergy = true;
        this._attackEnergy = value;
      }
    }

    public int DefendEnergy
    {
      get
      {
        return _defendEnergy;
      }
      set
      {
        __isset.defendEnergy = true;
        this._defendEnergy = value;
      }
    }

    public int AttackContribute
    {
      get
      {
        return _attackContribute;
      }
      set
      {
        __isset.attackContribute = true;
        this._attackContribute = value;
      }
    }

    public int DefendContribute
    {
      get
      {
        return _defendContribute;
      }
      set
      {
        __isset.defendContribute = true;
        this._defendContribute = value;
      }
    }

    public string AttackMaxKillNumName
    {
      get
      {
        return _attackMaxKillNumName;
      }
      set
      {
        __isset.attackMaxKillNumName = true;
        this._attackMaxKillNumName = value;
      }
    }

    public int AttackMaxKillNum
    {
      get
      {
        return _attackMaxKillNum;
      }
      set
      {
        __isset.attackMaxKillNum = true;
        this._attackMaxKillNum = value;
      }
    }

    public string DefendMaxKillNumName
    {
      get
      {
        return _defendMaxKillNumName;
      }
      set
      {
        __isset.defendMaxKillNumName = true;
        this._defendMaxKillNumName = value;
      }
    }

    public int DefendMaxKillNum
    {
      get
      {
        return _defendMaxKillNum;
      }
      set
      {
        __isset.defendMaxKillNum = true;
        this._defendMaxKillNum = value;
      }
    }

    public int Win_money
    {
      get
      {
        return _win_money;
      }
      set
      {
        __isset.win_money = true;
        this._win_money = value;
      }
    }

    public int Draw_money
    {
      get
      {
        return _draw_money;
      }
      set
      {
        __isset.draw_money = true;
        this._draw_money = value;
      }
    }

    public int Contribute
    {
      get
      {
        return _contribute;
      }
      set
      {
        __isset.contribute = true;
        this._contribute = value;
      }
    }

    public string ScoreSource
    {
      get
      {
        return _scoreSource;
      }
      set
      {
        __isset.scoreSource = true;
        this._scoreSource = value;
      }
    }

    public int AttackHp
    {
      get
      {
        return _attackHp;
      }
      set
      {
        __isset.attackHp = true;
        this._attackHp = value;
      }
    }

    public int AttackMaxHp
    {
      get
      {
        return _attackMaxHp;
      }
      set
      {
        __isset.attackMaxHp = true;
        this._attackMaxHp = value;
      }
    }

    public int DefendHp
    {
      get
      {
        return _defendHp;
      }
      set
      {
        __isset.defendHp = true;
        this._defendHp = value;
      }
    }

    public int DefendMaxHp
    {
      get
      {
        return _defendMaxHp;
      }
      set
      {
        __isset.defendMaxHp = true;
        this._defendMaxHp = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool attackScore;
      public bool defendScore;
      public bool attackEnergy;
      public bool defendEnergy;
      public bool attackContribute;
      public bool defendContribute;
      public bool attackMaxKillNumName;
      public bool attackMaxKillNum;
      public bool defendMaxKillNumName;
      public bool defendMaxKillNum;
      public bool win_money;
      public bool draw_money;
      public bool contribute;
      public bool scoreSource;
      public bool attackHp;
      public bool attackMaxHp;
      public bool defendHp;
      public bool defendMaxHp;
    }

    public ClanfightPartScoreResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              AttackScore = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              DefendScore = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              AttackEnergy = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              DefendEnergy = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              AttackContribute = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              DefendContribute = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              AttackMaxKillNumName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              AttackMaxKillNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              DefendMaxKillNumName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              DefendMaxKillNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Win_money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              Draw_money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              Contribute = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              ScoreSource = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              AttackHp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.I32) {
              AttackMaxHp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.I32) {
              DefendHp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.I32) {
              DefendMaxHp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanfightPartScoreResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.attackScore) {
        field.Name = "attackScore";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackScore);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendScore) {
        field.Name = "defendScore";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendScore);
        oprot.WriteFieldEnd();
      }
      if (__isset.attackEnergy) {
        field.Name = "attackEnergy";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackEnergy);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendEnergy) {
        field.Name = "defendEnergy";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendEnergy);
        oprot.WriteFieldEnd();
      }
      if (__isset.attackContribute) {
        field.Name = "attackContribute";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackContribute);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendContribute) {
        field.Name = "defendContribute";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendContribute);
        oprot.WriteFieldEnd();
      }
      if (AttackMaxKillNumName != null && __isset.attackMaxKillNumName) {
        field.Name = "attackMaxKillNumName";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AttackMaxKillNumName);
        oprot.WriteFieldEnd();
      }
      if (__isset.attackMaxKillNum) {
        field.Name = "attackMaxKillNum";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackMaxKillNum);
        oprot.WriteFieldEnd();
      }
      if (DefendMaxKillNumName != null && __isset.defendMaxKillNumName) {
        field.Name = "defendMaxKillNumName";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DefendMaxKillNumName);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendMaxKillNum) {
        field.Name = "defendMaxKillNum";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendMaxKillNum);
        oprot.WriteFieldEnd();
      }
      if (__isset.win_money) {
        field.Name = "win_money";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Win_money);
        oprot.WriteFieldEnd();
      }
      if (__isset.draw_money) {
        field.Name = "draw_money";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Draw_money);
        oprot.WriteFieldEnd();
      }
      if (__isset.contribute) {
        field.Name = "contribute";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Contribute);
        oprot.WriteFieldEnd();
      }
      if (ScoreSource != null && __isset.scoreSource) {
        field.Name = "scoreSource";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ScoreSource);
        oprot.WriteFieldEnd();
      }
      if (__isset.attackHp) {
        field.Name = "attackHp";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackHp);
        oprot.WriteFieldEnd();
      }
      if (__isset.attackMaxHp) {
        field.Name = "attackMaxHp";
        field.Type = TType.I32;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AttackMaxHp);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendHp) {
        field.Name = "defendHp";
        field.Type = TType.I32;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendHp);
        oprot.WriteFieldEnd();
      }
      if (__isset.defendMaxHp) {
        field.Name = "defendMaxHp";
        field.Type = TType.I32;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(DefendMaxHp);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanfightPartScoreResponse(");
      sb.Append("AttackScore: ");
      sb.Append(AttackScore);
      sb.Append(",DefendScore: ");
      sb.Append(DefendScore);
      sb.Append(",AttackEnergy: ");
      sb.Append(AttackEnergy);
      sb.Append(",DefendEnergy: ");
      sb.Append(DefendEnergy);
      sb.Append(",AttackContribute: ");
      sb.Append(AttackContribute);
      sb.Append(",DefendContribute: ");
      sb.Append(DefendContribute);
      sb.Append(",AttackMaxKillNumName: ");
      sb.Append(AttackMaxKillNumName);
      sb.Append(",AttackMaxKillNum: ");
      sb.Append(AttackMaxKillNum);
      sb.Append(",DefendMaxKillNumName: ");
      sb.Append(DefendMaxKillNumName);
      sb.Append(",DefendMaxKillNum: ");
      sb.Append(DefendMaxKillNum);
      sb.Append(",Win_money: ");
      sb.Append(Win_money);
      sb.Append(",Draw_money: ");
      sb.Append(Draw_money);
      sb.Append(",Contribute: ");
      sb.Append(Contribute);
      sb.Append(",ScoreSource: ");
      sb.Append(ScoreSource);
      sb.Append(",AttackHp: ");
      sb.Append(AttackHp);
      sb.Append(",AttackMaxHp: ");
      sb.Append(AttackMaxHp);
      sb.Append(",DefendHp: ");
      sb.Append(DefendHp);
      sb.Append(",DefendMaxHp: ");
      sb.Append(DefendMaxHp);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
