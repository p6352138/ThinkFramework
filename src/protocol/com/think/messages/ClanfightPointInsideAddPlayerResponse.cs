/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanfightPointInsideAddPlayerResponse : TBase
  {
    private ClanFightPlayerResponse _addPlayer;
    private short _targetPointId;

    public ClanFightPlayerResponse AddPlayer
    {
      get
      {
        return _addPlayer;
      }
      set
      {
        __isset.addPlayer = true;
        this._addPlayer = value;
      }
    }

    public short TargetPointId
    {
      get
      {
        return _targetPointId;
      }
      set
      {
        __isset.targetPointId = true;
        this._targetPointId = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool addPlayer;
      public bool targetPointId;
    }

    public ClanfightPointInsideAddPlayerResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              AddPlayer = new ClanFightPlayerResponse();
              AddPlayer.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I16) {
              TargetPointId = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanfightPointInsideAddPlayerResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (AddPlayer != null && __isset.addPlayer) {
        field.Name = "addPlayer";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        AddPlayer.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetPointId) {
        field.Name = "targetPointId";
        field.Type = TType.I16;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(TargetPointId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanfightPointInsideAddPlayerResponse(");
      sb.Append("AddPlayer: ");
      sb.Append(AddPlayer== null ? "<null>" : AddPlayer.ToString());
      sb.Append(",TargetPointId: ");
      sb.Append(TargetPointId);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
