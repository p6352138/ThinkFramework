/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ClanfightPointInsideResponse : TBase
  {
    private short _targetPointId;
    private List<ClanFightPlayerResponse> _attackPlayerList;
    private List<ClanFightPlayerResponse> _defendPlayerList;

    public short TargetPointId
    {
      get
      {
        return _targetPointId;
      }
      set
      {
        __isset.targetPointId = true;
        this._targetPointId = value;
      }
    }

    public List<ClanFightPlayerResponse> AttackPlayerList
    {
      get
      {
        return _attackPlayerList;
      }
      set
      {
        __isset.attackPlayerList = true;
        this._attackPlayerList = value;
      }
    }

    public List<ClanFightPlayerResponse> DefendPlayerList
    {
      get
      {
        return _defendPlayerList;
      }
      set
      {
        __isset.defendPlayerList = true;
        this._defendPlayerList = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool targetPointId;
      public bool attackPlayerList;
      public bool defendPlayerList;
    }

    public ClanfightPointInsideResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I16) {
              TargetPointId = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                AttackPlayerList = new List<ClanFightPlayerResponse>();
                TList _list841 = iprot.ReadListBegin();
                for( int _i842 = 0; _i842 < _list841.Count; ++_i842)
                {
                  ClanFightPlayerResponse _elem843 = new ClanFightPlayerResponse();
                  _elem843 = new ClanFightPlayerResponse();
                  _elem843.Read(iprot);
                  AttackPlayerList.Add(_elem843);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                DefendPlayerList = new List<ClanFightPlayerResponse>();
                TList _list844 = iprot.ReadListBegin();
                for( int _i845 = 0; _i845 < _list844.Count; ++_i845)
                {
                  ClanFightPlayerResponse _elem846 = new ClanFightPlayerResponse();
                  _elem846 = new ClanFightPlayerResponse();
                  _elem846.Read(iprot);
                  DefendPlayerList.Add(_elem846);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ClanfightPointInsideResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.targetPointId) {
        field.Name = "targetPointId";
        field.Type = TType.I16;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(TargetPointId);
        oprot.WriteFieldEnd();
      }
      if (AttackPlayerList != null && __isset.attackPlayerList) {
        field.Name = "attackPlayerList";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, AttackPlayerList.Count));
          foreach (ClanFightPlayerResponse _iter847 in AttackPlayerList)
          {
            _iter847.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (DefendPlayerList != null && __isset.defendPlayerList) {
        field.Name = "defendPlayerList";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, DefendPlayerList.Count));
          foreach (ClanFightPlayerResponse _iter848 in DefendPlayerList)
          {
            _iter848.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ClanfightPointInsideResponse(");
      sb.Append("TargetPointId: ");
      sb.Append(TargetPointId);
      sb.Append(",AttackPlayerList: ");
      sb.Append(AttackPlayerList);
      sb.Append(",DefendPlayerList: ");
      sb.Append(DefendPlayerList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
