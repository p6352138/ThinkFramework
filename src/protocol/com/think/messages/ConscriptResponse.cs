/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ConscriptResponse : TBase
  {
    private int _times;
    private int _maxTimes;
    private string _need_food_str;

    public int Times
    {
      get
      {
        return _times;
      }
      set
      {
        __isset.times = true;
        this._times = value;
      }
    }

    public int MaxTimes
    {
      get
      {
        return _maxTimes;
      }
      set
      {
        __isset.maxTimes = true;
        this._maxTimes = value;
      }
    }

    public string Need_food_str
    {
      get
      {
        return _need_food_str;
      }
      set
      {
        __isset.need_food_str = true;
        this._need_food_str = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool times;
      public bool maxTimes;
      public bool need_food_str;
    }

    public ConscriptResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Times = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              MaxTimes = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Need_food_str = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ConscriptResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.times) {
        field.Name = "times";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Times);
        oprot.WriteFieldEnd();
      }
      if (__isset.maxTimes) {
        field.Name = "maxTimes";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MaxTimes);
        oprot.WriteFieldEnd();
      }
      if (Need_food_str != null && __isset.need_food_str) {
        field.Name = "need_food_str";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Need_food_str);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ConscriptResponse(");
      sb.Append("Times: ");
      sb.Append(Times);
      sb.Append(",MaxTimes: ");
      sb.Append(MaxTimes);
      sb.Append(",Need_food_str: ");
      sb.Append(Need_food_str);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
