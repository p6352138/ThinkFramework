/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class EquipmentBatchWashResponse : TBase
  {
    private List<List<EquipWashTroughResponse>> _washDataList;

    public List<List<EquipWashTroughResponse>> WashDataList
    {
      get
      {
        return _washDataList;
      }
      set
      {
        __isset.washDataList = true;
        this._washDataList = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool washDataList;
    }

    public EquipmentBatchWashResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                WashDataList = new List<List<EquipWashTroughResponse>>();
                TList _list789 = iprot.ReadListBegin();
                for( int _i790 = 0; _i790 < _list789.Count; ++_i790)
                {
                  List<EquipWashTroughResponse> _elem791 = new List<EquipWashTroughResponse>();
                  {
                    _elem791 = new List<EquipWashTroughResponse>();
                    TList _list792 = iprot.ReadListBegin();
                    for( int _i793 = 0; _i793 < _list792.Count; ++_i793)
                    {
                      EquipWashTroughResponse _elem794 = new EquipWashTroughResponse();
                      _elem794 = new EquipWashTroughResponse();
                      _elem794.Read(iprot);
                      _elem791.Add(_elem794);
                    }
                    iprot.ReadListEnd();
                  }
                  WashDataList.Add(_elem791);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("EquipmentBatchWashResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (WashDataList != null && __isset.washDataList) {
        field.Name = "washDataList";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.List, WashDataList.Count));
          foreach (List<EquipWashTroughResponse> _iter795 in WashDataList)
          {
            {
              oprot.WriteListBegin(new TList(TType.Struct, _iter795.Count));
              foreach (EquipWashTroughResponse _iter796 in _iter795)
              {
                _iter796.Write(oprot);
              }
              oprot.WriteListEnd();
            }
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("EquipmentBatchWashResponse(");
      sb.Append("WashDataList: ");
      sb.Append(WashDataList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
