/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ExpeditionFightResultResponse : TBase
  {
    private List<BossFightRankingResponse> _fight_ranking;
    private ResourceResponse _fail_award;
    private ResourceResponse _win_award;
    private BossFightRankingResponse _self_ranking;

    public List<BossFightRankingResponse> Fight_ranking
    {
      get
      {
        return _fight_ranking;
      }
      set
      {
        __isset.fight_ranking = true;
        this._fight_ranking = value;
      }
    }

    public ResourceResponse Fail_award
    {
      get
      {
        return _fail_award;
      }
      set
      {
        __isset.fail_award = true;
        this._fail_award = value;
      }
    }

    public ResourceResponse Win_award
    {
      get
      {
        return _win_award;
      }
      set
      {
        __isset.win_award = true;
        this._win_award = value;
      }
    }

    public BossFightRankingResponse Self_ranking
    {
      get
      {
        return _self_ranking;
      }
      set
      {
        __isset.self_ranking = true;
        this._self_ranking = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool fight_ranking;
      public bool fail_award;
      public bool win_award;
      public bool self_ranking;
    }

    public ExpeditionFightResultResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                Fight_ranking = new List<BossFightRankingResponse>();
                TList _list580 = iprot.ReadListBegin();
                for( int _i581 = 0; _i581 < _list580.Count; ++_i581)
                {
                  BossFightRankingResponse _elem582 = new BossFightRankingResponse();
                  _elem582 = new BossFightRankingResponse();
                  _elem582.Read(iprot);
                  Fight_ranking.Add(_elem582);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              Fail_award = new ResourceResponse();
              Fail_award.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              Win_award = new ResourceResponse();
              Win_award.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              Self_ranking = new BossFightRankingResponse();
              Self_ranking.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ExpeditionFightResultResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Fight_ranking != null && __isset.fight_ranking) {
        field.Name = "fight_ranking";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, Fight_ranking.Count));
          foreach (BossFightRankingResponse _iter583 in Fight_ranking)
          {
            _iter583.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (Fail_award != null && __isset.fail_award) {
        field.Name = "fail_award";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        Fail_award.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Win_award != null && __isset.win_award) {
        field.Name = "win_award";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        Win_award.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Self_ranking != null && __isset.self_ranking) {
        field.Name = "self_ranking";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        Self_ranking.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ExpeditionFightResultResponse(");
      sb.Append("Fight_ranking: ");
      sb.Append(Fight_ranking);
      sb.Append(",Fail_award: ");
      sb.Append(Fail_award== null ? "<null>" : Fail_award.ToString());
      sb.Append(",Win_award: ");
      sb.Append(Win_award== null ? "<null>" : Win_award.ToString());
      sb.Append(",Self_ranking: ");
      sb.Append(Self_ranking== null ? "<null>" : Self_ranking.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
