/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class ExpeditionMenuResponse : TBase
  {
    private int _id;
    private string _name;
    private string _intro;
    private ResourceResponse _resource;
    private List<FriendResponse> _friendList;
    private int _min_people;
    private int _max_people;
    private int _fight_count;
    private int _max_fight_count;
    private int _invite_gold;

    public int Id
    {
      get
      {
        return _id;
      }
      set
      {
        __isset.id = true;
        this._id = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public string Intro
    {
      get
      {
        return _intro;
      }
      set
      {
        __isset.intro = true;
        this._intro = value;
      }
    }

    public ResourceResponse Resource
    {
      get
      {
        return _resource;
      }
      set
      {
        __isset.resource = true;
        this._resource = value;
      }
    }

    public List<FriendResponse> FriendList
    {
      get
      {
        return _friendList;
      }
      set
      {
        __isset.friendList = true;
        this._friendList = value;
      }
    }

    public int Min_people
    {
      get
      {
        return _min_people;
      }
      set
      {
        __isset.min_people = true;
        this._min_people = value;
      }
    }

    public int Max_people
    {
      get
      {
        return _max_people;
      }
      set
      {
        __isset.max_people = true;
        this._max_people = value;
      }
    }

    public int Fight_count
    {
      get
      {
        return _fight_count;
      }
      set
      {
        __isset.fight_count = true;
        this._fight_count = value;
      }
    }

    public int Max_fight_count
    {
      get
      {
        return _max_fight_count;
      }
      set
      {
        __isset.max_fight_count = true;
        this._max_fight_count = value;
      }
    }

    public int Invite_gold
    {
      get
      {
        return _invite_gold;
      }
      set
      {
        __isset.invite_gold = true;
        this._invite_gold = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool id;
      public bool name;
      public bool intro;
      public bool resource;
      public bool friendList;
      public bool min_people;
      public bool max_people;
      public bool fight_count;
      public bool max_fight_count;
      public bool invite_gold;
    }

    public ExpeditionMenuResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Intro = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              Resource = new ResourceResponse();
              Resource.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                FriendList = new List<FriendResponse>();
                TList _list576 = iprot.ReadListBegin();
                for( int _i577 = 0; _i577 < _list576.Count; ++_i577)
                {
                  FriendResponse _elem578 = new FriendResponse();
                  _elem578 = new FriendResponse();
                  _elem578.Read(iprot);
                  FriendList.Add(_elem578);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Min_people = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Max_people = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Fight_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Max_fight_count = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Invite_gold = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ExpeditionMenuResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.id) {
        field.Name = "id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (Intro != null && __isset.intro) {
        field.Name = "intro";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Intro);
        oprot.WriteFieldEnd();
      }
      if (Resource != null && __isset.resource) {
        field.Name = "resource";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        Resource.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (FriendList != null && __isset.friendList) {
        field.Name = "friendList";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, FriendList.Count));
          foreach (FriendResponse _iter579 in FriendList)
          {
            _iter579.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.min_people) {
        field.Name = "min_people";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Min_people);
        oprot.WriteFieldEnd();
      }
      if (__isset.max_people) {
        field.Name = "max_people";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Max_people);
        oprot.WriteFieldEnd();
      }
      if (__isset.fight_count) {
        field.Name = "fight_count";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Fight_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.max_fight_count) {
        field.Name = "max_fight_count";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Max_fight_count);
        oprot.WriteFieldEnd();
      }
      if (__isset.invite_gold) {
        field.Name = "invite_gold";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Invite_gold);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ExpeditionMenuResponse(");
      sb.Append("Id: ");
      sb.Append(Id);
      sb.Append(",Name: ");
      sb.Append(Name);
      sb.Append(",Intro: ");
      sb.Append(Intro);
      sb.Append(",Resource: ");
      sb.Append(Resource== null ? "<null>" : Resource.ToString());
      sb.Append(",FriendList: ");
      sb.Append(FriendList);
      sb.Append(",Min_people: ");
      sb.Append(Min_people);
      sb.Append(",Max_people: ");
      sb.Append(Max_people);
      sb.Append(",Fight_count: ");
      sb.Append(Fight_count);
      sb.Append(",Max_fight_count: ");
      sb.Append(Max_fight_count);
      sb.Append(",Invite_gold: ");
      sb.Append(Invite_gold);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
