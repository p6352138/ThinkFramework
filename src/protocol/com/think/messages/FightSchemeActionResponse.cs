/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class FightSchemeActionResponse : TBase
  {
    private bool _isSuccess;
    private int _targetObjectID;
    private bool _isHoldPosition;
    private int _scheme_id;
    private string _schemeName;
    private int _scheme_icon;
    private int _specialEfficiencyID;
    private List<HarmTargetResponse> _harmTargetList;
    private int _scheme_type;
    private int _star_lvl;

    public bool IsSuccess
    {
      get
      {
        return _isSuccess;
      }
      set
      {
        __isset.isSuccess = true;
        this._isSuccess = value;
      }
    }

    public int TargetObjectID
    {
      get
      {
        return _targetObjectID;
      }
      set
      {
        __isset.targetObjectID = true;
        this._targetObjectID = value;
      }
    }

    public bool IsHoldPosition
    {
      get
      {
        return _isHoldPosition;
      }
      set
      {
        __isset.isHoldPosition = true;
        this._isHoldPosition = value;
      }
    }

    public int Scheme_id
    {
      get
      {
        return _scheme_id;
      }
      set
      {
        __isset.scheme_id = true;
        this._scheme_id = value;
      }
    }

    public string SchemeName
    {
      get
      {
        return _schemeName;
      }
      set
      {
        __isset.schemeName = true;
        this._schemeName = value;
      }
    }

    public int Scheme_icon
    {
      get
      {
        return _scheme_icon;
      }
      set
      {
        __isset.scheme_icon = true;
        this._scheme_icon = value;
      }
    }

    public int SpecialEfficiencyID
    {
      get
      {
        return _specialEfficiencyID;
      }
      set
      {
        __isset.specialEfficiencyID = true;
        this._specialEfficiencyID = value;
      }
    }

    public List<HarmTargetResponse> HarmTargetList
    {
      get
      {
        return _harmTargetList;
      }
      set
      {
        __isset.harmTargetList = true;
        this._harmTargetList = value;
      }
    }

    public int Scheme_type
    {
      get
      {
        return _scheme_type;
      }
      set
      {
        __isset.scheme_type = true;
        this._scheme_type = value;
      }
    }

    public int Star_lvl
    {
      get
      {
        return _star_lvl;
      }
      set
      {
        __isset.star_lvl = true;
        this._star_lvl = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool isSuccess;
      public bool targetObjectID;
      public bool isHoldPosition;
      public bool scheme_id;
      public bool schemeName;
      public bool scheme_icon;
      public bool specialEfficiencyID;
      public bool harmTargetList;
      public bool scheme_type;
      public bool star_lvl;
    }

    public FightSchemeActionResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Bool) {
              IsSuccess = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              TargetObjectID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Bool) {
              IsHoldPosition = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Scheme_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              SchemeName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Scheme_icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              SpecialEfficiencyID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.List) {
              {
                HarmTargetList = new List<HarmTargetResponse>();
                TList _list120 = iprot.ReadListBegin();
                for( int _i121 = 0; _i121 < _list120.Count; ++_i121)
                {
                  HarmTargetResponse _elem122 = new HarmTargetResponse();
                  _elem122 = new HarmTargetResponse();
                  _elem122.Read(iprot);
                  HarmTargetList.Add(_elem122);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Scheme_type = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Star_lvl = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("FightSchemeActionResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.isSuccess) {
        field.Name = "isSuccess";
        field.Type = TType.Bool;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsSuccess);
        oprot.WriteFieldEnd();
      }
      if (__isset.targetObjectID) {
        field.Name = "targetObjectID";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TargetObjectID);
        oprot.WriteFieldEnd();
      }
      if (__isset.isHoldPosition) {
        field.Name = "isHoldPosition";
        field.Type = TType.Bool;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsHoldPosition);
        oprot.WriteFieldEnd();
      }
      if (__isset.scheme_id) {
        field.Name = "scheme_id";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Scheme_id);
        oprot.WriteFieldEnd();
      }
      if (SchemeName != null && __isset.schemeName) {
        field.Name = "schemeName";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SchemeName);
        oprot.WriteFieldEnd();
      }
      if (__isset.scheme_icon) {
        field.Name = "scheme_icon";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Scheme_icon);
        oprot.WriteFieldEnd();
      }
      if (__isset.specialEfficiencyID) {
        field.Name = "specialEfficiencyID";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(SpecialEfficiencyID);
        oprot.WriteFieldEnd();
      }
      if (HarmTargetList != null && __isset.harmTargetList) {
        field.Name = "harmTargetList";
        field.Type = TType.List;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, HarmTargetList.Count));
          foreach (HarmTargetResponse _iter123 in HarmTargetList)
          {
            _iter123.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.scheme_type) {
        field.Name = "scheme_type";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Scheme_type);
        oprot.WriteFieldEnd();
      }
      if (__isset.star_lvl) {
        field.Name = "star_lvl";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Star_lvl);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("FightSchemeActionResponse(");
      sb.Append("IsSuccess: ");
      sb.Append(IsSuccess);
      sb.Append(",TargetObjectID: ");
      sb.Append(TargetObjectID);
      sb.Append(",IsHoldPosition: ");
      sb.Append(IsHoldPosition);
      sb.Append(",Scheme_id: ");
      sb.Append(Scheme_id);
      sb.Append(",SchemeName: ");
      sb.Append(SchemeName);
      sb.Append(",Scheme_icon: ");
      sb.Append(Scheme_icon);
      sb.Append(",SpecialEfficiencyID: ");
      sb.Append(SpecialEfficiencyID);
      sb.Append(",HarmTargetList: ");
      sb.Append(HarmTargetList);
      sb.Append(",Scheme_type: ");
      sb.Append(Scheme_type);
      sb.Append(",Star_lvl: ");
      sb.Append(Star_lvl);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
