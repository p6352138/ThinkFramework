/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class GVGObjectResponse : TBase
  {
    private byte _respType;
    private int _objectID;
    private int _cell_x;
    private int _cell_y;
    private int _hp;
    private int _maxHp;
    private byte _soldierType;
    private bool _isEnemy;

    public byte RespType
    {
      get
      {
        return _respType;
      }
      set
      {
        __isset.respType = true;
        this._respType = value;
      }
    }

    public int ObjectID
    {
      get
      {
        return _objectID;
      }
      set
      {
        __isset.objectID = true;
        this._objectID = value;
      }
    }

    public int Cell_x
    {
      get
      {
        return _cell_x;
      }
      set
      {
        __isset.cell_x = true;
        this._cell_x = value;
      }
    }

    public int Cell_y
    {
      get
      {
        return _cell_y;
      }
      set
      {
        __isset.cell_y = true;
        this._cell_y = value;
      }
    }

    public int Hp
    {
      get
      {
        return _hp;
      }
      set
      {
        __isset.hp = true;
        this._hp = value;
      }
    }

    public int MaxHp
    {
      get
      {
        return _maxHp;
      }
      set
      {
        __isset.maxHp = true;
        this._maxHp = value;
      }
    }

    public byte SoldierType
    {
      get
      {
        return _soldierType;
      }
      set
      {
        __isset.soldierType = true;
        this._soldierType = value;
      }
    }

    public bool IsEnemy
    {
      get
      {
        return _isEnemy;
      }
      set
      {
        __isset.isEnemy = true;
        this._isEnemy = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool respType;
      public bool objectID;
      public bool cell_x;
      public bool cell_y;
      public bool hp;
      public bool maxHp;
      public bool soldierType;
      public bool isEnemy;
    }

    public GVGObjectResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              RespType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              ObjectID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Cell_x = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Cell_y = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Hp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              MaxHp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Byte) {
              SoldierType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Bool) {
              IsEnemy = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GVGObjectResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.respType) {
        field.Name = "respType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(RespType);
        oprot.WriteFieldEnd();
      }
      if (__isset.objectID) {
        field.Name = "objectID";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(ObjectID);
        oprot.WriteFieldEnd();
      }
      if (__isset.cell_x) {
        field.Name = "cell_x";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Cell_x);
        oprot.WriteFieldEnd();
      }
      if (__isset.cell_y) {
        field.Name = "cell_y";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Cell_y);
        oprot.WriteFieldEnd();
      }
      if (__isset.hp) {
        field.Name = "hp";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Hp);
        oprot.WriteFieldEnd();
      }
      if (__isset.maxHp) {
        field.Name = "maxHp";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MaxHp);
        oprot.WriteFieldEnd();
      }
      if (__isset.soldierType) {
        field.Name = "soldierType";
        field.Type = TType.Byte;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(SoldierType);
        oprot.WriteFieldEnd();
      }
      if (__isset.isEnemy) {
        field.Name = "isEnemy";
        field.Type = TType.Bool;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsEnemy);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GVGObjectResponse(");
      sb.Append("RespType: ");
      sb.Append(RespType);
      sb.Append(",ObjectID: ");
      sb.Append(ObjectID);
      sb.Append(",Cell_x: ");
      sb.Append(Cell_x);
      sb.Append(",Cell_y: ");
      sb.Append(Cell_y);
      sb.Append(",Hp: ");
      sb.Append(Hp);
      sb.Append(",MaxHp: ");
      sb.Append(MaxHp);
      sb.Append(",SoldierType: ");
      sb.Append(SoldierType);
      sb.Append(",IsEnemy: ");
      sb.Append(IsEnemy);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
