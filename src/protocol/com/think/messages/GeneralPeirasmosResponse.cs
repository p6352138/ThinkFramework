/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class GeneralPeirasmosResponse : TBase
  {
    private int _general_id;
    private string _peirasmos_name;
    private int _add_hp;
    private string _next_peirasmos_name;
    private int _next_add_hp;
    private int _consume_feat;
    private int _requiredLevel;
    private bool _isUpgrade;
    private int _peirasmos_id;

    public int General_id
    {
      get
      {
        return _general_id;
      }
      set
      {
        __isset.general_id = true;
        this._general_id = value;
      }
    }

    public string Peirasmos_name
    {
      get
      {
        return _peirasmos_name;
      }
      set
      {
        __isset.peirasmos_name = true;
        this._peirasmos_name = value;
      }
    }

    public int Add_hp
    {
      get
      {
        return _add_hp;
      }
      set
      {
        __isset.add_hp = true;
        this._add_hp = value;
      }
    }

    public string Next_peirasmos_name
    {
      get
      {
        return _next_peirasmos_name;
      }
      set
      {
        __isset.next_peirasmos_name = true;
        this._next_peirasmos_name = value;
      }
    }

    public int Next_add_hp
    {
      get
      {
        return _next_add_hp;
      }
      set
      {
        __isset.next_add_hp = true;
        this._next_add_hp = value;
      }
    }

    public int Consume_feat
    {
      get
      {
        return _consume_feat;
      }
      set
      {
        __isset.consume_feat = true;
        this._consume_feat = value;
      }
    }

    public int RequiredLevel
    {
      get
      {
        return _requiredLevel;
      }
      set
      {
        __isset.requiredLevel = true;
        this._requiredLevel = value;
      }
    }

    public bool IsUpgrade
    {
      get
      {
        return _isUpgrade;
      }
      set
      {
        __isset.isUpgrade = true;
        this._isUpgrade = value;
      }
    }

    public int Peirasmos_id
    {
      get
      {
        return _peirasmos_id;
      }
      set
      {
        __isset.peirasmos_id = true;
        this._peirasmos_id = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool general_id;
      public bool peirasmos_name;
      public bool add_hp;
      public bool next_peirasmos_name;
      public bool next_add_hp;
      public bool consume_feat;
      public bool requiredLevel;
      public bool isUpgrade;
      public bool peirasmos_id;
    }

    public GeneralPeirasmosResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              General_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Peirasmos_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Add_hp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Next_peirasmos_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Next_add_hp = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Consume_feat = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              RequiredLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Bool) {
              IsUpgrade = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Peirasmos_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("GeneralPeirasmosResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.general_id) {
        field.Name = "general_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_id);
        oprot.WriteFieldEnd();
      }
      if (Peirasmos_name != null && __isset.peirasmos_name) {
        field.Name = "peirasmos_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Peirasmos_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.add_hp) {
        field.Name = "add_hp";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Add_hp);
        oprot.WriteFieldEnd();
      }
      if (Next_peirasmos_name != null && __isset.next_peirasmos_name) {
        field.Name = "next_peirasmos_name";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Next_peirasmos_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.next_add_hp) {
        field.Name = "next_add_hp";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Next_add_hp);
        oprot.WriteFieldEnd();
      }
      if (__isset.consume_feat) {
        field.Name = "consume_feat";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Consume_feat);
        oprot.WriteFieldEnd();
      }
      if (__isset.requiredLevel) {
        field.Name = "requiredLevel";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(RequiredLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.isUpgrade) {
        field.Name = "isUpgrade";
        field.Type = TType.Bool;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsUpgrade);
        oprot.WriteFieldEnd();
      }
      if (__isset.peirasmos_id) {
        field.Name = "peirasmos_id";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Peirasmos_id);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("GeneralPeirasmosResponse(");
      sb.Append("General_id: ");
      sb.Append(General_id);
      sb.Append(",Peirasmos_name: ");
      sb.Append(Peirasmos_name);
      sb.Append(",Add_hp: ");
      sb.Append(Add_hp);
      sb.Append(",Next_peirasmos_name: ");
      sb.Append(Next_peirasmos_name);
      sb.Append(",Next_add_hp: ");
      sb.Append(Next_add_hp);
      sb.Append(",Consume_feat: ");
      sb.Append(Consume_feat);
      sb.Append(",RequiredLevel: ");
      sb.Append(RequiredLevel);
      sb.Append(",IsUpgrade: ");
      sb.Append(IsUpgrade);
      sb.Append(",Peirasmos_id: ");
      sb.Append(Peirasmos_id);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
