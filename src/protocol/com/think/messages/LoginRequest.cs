/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class LoginRequest : TBase
  {
    private byte _type;
    private string _userName;
    private string _password;
    private string _newPassword;
    private string _publisher;
    private string _client_type;
    private string _client_version;

    public byte Type
    {
      get
      {
        return _type;
      }
      set
      {
        __isset.type = true;
        this._type = value;
      }
    }

    public string UserName
    {
      get
      {
        return _userName;
      }
      set
      {
        __isset.userName = true;
        this._userName = value;
      }
    }

    public string Password
    {
      get
      {
        return _password;
      }
      set
      {
        __isset.password = true;
        this._password = value;
      }
    }

    public string NewPassword
    {
      get
      {
        return _newPassword;
      }
      set
      {
        __isset.newPassword = true;
        this._newPassword = value;
      }
    }

    public string Publisher
    {
      get
      {
        return _publisher;
      }
      set
      {
        __isset.publisher = true;
        this._publisher = value;
      }
    }

    public string Client_type
    {
      get
      {
        return _client_type;
      }
      set
      {
        __isset.client_type = true;
        this._client_type = value;
      }
    }

    public string Client_version
    {
      get
      {
        return _client_version;
      }
      set
      {
        __isset.client_version = true;
        this._client_version = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool type;
      public bool userName;
      public bool password;
      public bool newPassword;
      public bool publisher;
      public bool client_type;
      public bool client_version;
    }

    public LoginRequest() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              Type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              UserName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Password = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              NewPassword = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Publisher = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              Client_type = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              Client_version = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("LoginRequest");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Type);
        oprot.WriteFieldEnd();
      }
      if (UserName != null && __isset.userName) {
        field.Name = "userName";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UserName);
        oprot.WriteFieldEnd();
      }
      if (Password != null && __isset.password) {
        field.Name = "password";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Password);
        oprot.WriteFieldEnd();
      }
      if (NewPassword != null && __isset.newPassword) {
        field.Name = "newPassword";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NewPassword);
        oprot.WriteFieldEnd();
      }
      if (Publisher != null && __isset.publisher) {
        field.Name = "publisher";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Publisher);
        oprot.WriteFieldEnd();
      }
      if (Client_type != null && __isset.client_type) {
        field.Name = "client_type";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Client_type);
        oprot.WriteFieldEnd();
      }
      if (Client_version != null && __isset.client_version) {
        field.Name = "client_version";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Client_version);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("LoginRequest(");
      sb.Append("Type: ");
      sb.Append(Type);
      sb.Append(",UserName: ");
      sb.Append(UserName);
      sb.Append(",Password: ");
      sb.Append(Password);
      sb.Append(",NewPassword: ");
      sb.Append(NewPassword);
      sb.Append(",Publisher: ");
      sb.Append(Publisher);
      sb.Append(",Client_type: ");
      sb.Append(Client_type);
      sb.Append(",Client_version: ");
      sb.Append(Client_version);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
