/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class MyFriendsResponse : TBase
  {
    private byte _resType;
    private int _focusOnNum;
    private int _maxFocusOnNum;
    private int _fansNum;
    private List<FriendResponse> _friendList;
    private List<FriendResponse> _brackFriendList;

    public byte ResType
    {
      get
      {
        return _resType;
      }
      set
      {
        __isset.resType = true;
        this._resType = value;
      }
    }

    public int FocusOnNum
    {
      get
      {
        return _focusOnNum;
      }
      set
      {
        __isset.focusOnNum = true;
        this._focusOnNum = value;
      }
    }

    public int MaxFocusOnNum
    {
      get
      {
        return _maxFocusOnNum;
      }
      set
      {
        __isset.maxFocusOnNum = true;
        this._maxFocusOnNum = value;
      }
    }

    public int FansNum
    {
      get
      {
        return _fansNum;
      }
      set
      {
        __isset.fansNum = true;
        this._fansNum = value;
      }
    }

    public List<FriendResponse> FriendList
    {
      get
      {
        return _friendList;
      }
      set
      {
        __isset.friendList = true;
        this._friendList = value;
      }
    }

    public List<FriendResponse> BrackFriendList
    {
      get
      {
        return _brackFriendList;
      }
      set
      {
        __isset.brackFriendList = true;
        this._brackFriendList = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool resType;
      public bool focusOnNum;
      public bool maxFocusOnNum;
      public bool fansNum;
      public bool friendList;
      public bool brackFriendList;
    }

    public MyFriendsResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              ResType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              FocusOnNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              MaxFocusOnNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              FansNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                FriendList = new List<FriendResponse>();
                TList _list564 = iprot.ReadListBegin();
                for( int _i565 = 0; _i565 < _list564.Count; ++_i565)
                {
                  FriendResponse _elem566 = new FriendResponse();
                  _elem566 = new FriendResponse();
                  _elem566.Read(iprot);
                  FriendList.Add(_elem566);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.List) {
              {
                BrackFriendList = new List<FriendResponse>();
                TList _list567 = iprot.ReadListBegin();
                for( int _i568 = 0; _i568 < _list567.Count; ++_i568)
                {
                  FriendResponse _elem569 = new FriendResponse();
                  _elem569 = new FriendResponse();
                  _elem569.Read(iprot);
                  BrackFriendList.Add(_elem569);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MyFriendsResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.resType) {
        field.Name = "resType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(ResType);
        oprot.WriteFieldEnd();
      }
      if (__isset.focusOnNum) {
        field.Name = "focusOnNum";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FocusOnNum);
        oprot.WriteFieldEnd();
      }
      if (__isset.maxFocusOnNum) {
        field.Name = "maxFocusOnNum";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MaxFocusOnNum);
        oprot.WriteFieldEnd();
      }
      if (__isset.fansNum) {
        field.Name = "fansNum";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(FansNum);
        oprot.WriteFieldEnd();
      }
      if (FriendList != null && __isset.friendList) {
        field.Name = "friendList";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, FriendList.Count));
          foreach (FriendResponse _iter570 in FriendList)
          {
            _iter570.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (BrackFriendList != null && __isset.brackFriendList) {
        field.Name = "brackFriendList";
        field.Type = TType.List;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, BrackFriendList.Count));
          foreach (FriendResponse _iter571 in BrackFriendList)
          {
            _iter571.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MyFriendsResponse(");
      sb.Append("ResType: ");
      sb.Append(ResType);
      sb.Append(",FocusOnNum: ");
      sb.Append(FocusOnNum);
      sb.Append(",MaxFocusOnNum: ");
      sb.Append(MaxFocusOnNum);
      sb.Append(",FansNum: ");
      sb.Append(FansNum);
      sb.Append(",FriendList: ");
      sb.Append(FriendList);
      sb.Append(",BrackFriendList: ");
      sb.Append(BrackFriendList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
