/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class NewCrossServerKingsHonorPlayerResponse : TBase
  {
    private int _user_id;
    private string _userName;
    private int _playerLvl;
    private int _war_zone;
    private int _score;
    private bool _isCanSupport;
    private int _support_num;
    private string _gameFlag;

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public string UserName
    {
      get
      {
        return _userName;
      }
      set
      {
        __isset.userName = true;
        this._userName = value;
      }
    }

    public int PlayerLvl
    {
      get
      {
        return _playerLvl;
      }
      set
      {
        __isset.playerLvl = true;
        this._playerLvl = value;
      }
    }

    public int War_zone
    {
      get
      {
        return _war_zone;
      }
      set
      {
        __isset.war_zone = true;
        this._war_zone = value;
      }
    }

    public int Score
    {
      get
      {
        return _score;
      }
      set
      {
        __isset.score = true;
        this._score = value;
      }
    }

    public bool IsCanSupport
    {
      get
      {
        return _isCanSupport;
      }
      set
      {
        __isset.isCanSupport = true;
        this._isCanSupport = value;
      }
    }

    public int Support_num
    {
      get
      {
        return _support_num;
      }
      set
      {
        __isset.support_num = true;
        this._support_num = value;
      }
    }

    public string GameFlag
    {
      get
      {
        return _gameFlag;
      }
      set
      {
        __isset.gameFlag = true;
        this._gameFlag = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool user_id;
      public bool userName;
      public bool playerLvl;
      public bool war_zone;
      public bool score;
      public bool isCanSupport;
      public bool support_num;
      public bool gameFlag;
    }

    public NewCrossServerKingsHonorPlayerResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              UserName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              PlayerLvl = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              War_zone = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Score = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Bool) {
              IsCanSupport = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Support_num = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              GameFlag = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("NewCrossServerKingsHonorPlayerResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (UserName != null && __isset.userName) {
        field.Name = "userName";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UserName);
        oprot.WriteFieldEnd();
      }
      if (__isset.playerLvl) {
        field.Name = "playerLvl";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(PlayerLvl);
        oprot.WriteFieldEnd();
      }
      if (__isset.war_zone) {
        field.Name = "war_zone";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(War_zone);
        oprot.WriteFieldEnd();
      }
      if (__isset.score) {
        field.Name = "score";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Score);
        oprot.WriteFieldEnd();
      }
      if (__isset.isCanSupport) {
        field.Name = "isCanSupport";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IsCanSupport);
        oprot.WriteFieldEnd();
      }
      if (__isset.support_num) {
        field.Name = "support_num";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Support_num);
        oprot.WriteFieldEnd();
      }
      if (GameFlag != null && __isset.gameFlag) {
        field.Name = "gameFlag";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(GameFlag);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("NewCrossServerKingsHonorPlayerResponse(");
      sb.Append("User_id: ");
      sb.Append(User_id);
      sb.Append(",UserName: ");
      sb.Append(UserName);
      sb.Append(",PlayerLvl: ");
      sb.Append(PlayerLvl);
      sb.Append(",War_zone: ");
      sb.Append(War_zone);
      sb.Append(",Score: ");
      sb.Append(Score);
      sb.Append(",IsCanSupport: ");
      sb.Append(IsCanSupport);
      sb.Append(",Support_num: ");
      sb.Append(Support_num);
      sb.Append(",GameFlag: ");
      sb.Append(GameFlag);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
