/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class NewPlunderResponse : TBase
  {
    private string _slogan;
    private string _banner_name;
    private int _banner_icon;
    private List<string> _plunder_log;
    private int _money;
    private int _food;
    private int _exploit;
    private int _technique;
    private int _general_soul;
    private int _prestige;
    private int _forces;
    private BannerResponse _banner;
    private BannerResponse _next_banner;

    public string Slogan
    {
      get
      {
        return _slogan;
      }
      set
      {
        __isset.slogan = true;
        this._slogan = value;
      }
    }

    public string Banner_name
    {
      get
      {
        return _banner_name;
      }
      set
      {
        __isset.banner_name = true;
        this._banner_name = value;
      }
    }

    public int Banner_icon
    {
      get
      {
        return _banner_icon;
      }
      set
      {
        __isset.banner_icon = true;
        this._banner_icon = value;
      }
    }

    public List<string> Plunder_log
    {
      get
      {
        return _plunder_log;
      }
      set
      {
        __isset.plunder_log = true;
        this._plunder_log = value;
      }
    }

    public int Money
    {
      get
      {
        return _money;
      }
      set
      {
        __isset.money = true;
        this._money = value;
      }
    }

    public int Food
    {
      get
      {
        return _food;
      }
      set
      {
        __isset.food = true;
        this._food = value;
      }
    }

    public int Exploit
    {
      get
      {
        return _exploit;
      }
      set
      {
        __isset.exploit = true;
        this._exploit = value;
      }
    }

    public int Technique
    {
      get
      {
        return _technique;
      }
      set
      {
        __isset.technique = true;
        this._technique = value;
      }
    }

    public int General_soul
    {
      get
      {
        return _general_soul;
      }
      set
      {
        __isset.general_soul = true;
        this._general_soul = value;
      }
    }

    public int Prestige
    {
      get
      {
        return _prestige;
      }
      set
      {
        __isset.prestige = true;
        this._prestige = value;
      }
    }

    public int Forces
    {
      get
      {
        return _forces;
      }
      set
      {
        __isset.forces = true;
        this._forces = value;
      }
    }

    public BannerResponse Banner
    {
      get
      {
        return _banner;
      }
      set
      {
        __isset.banner = true;
        this._banner = value;
      }
    }

    public BannerResponse Next_banner
    {
      get
      {
        return _next_banner;
      }
      set
      {
        __isset.next_banner = true;
        this._next_banner = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool slogan;
      public bool banner_name;
      public bool banner_icon;
      public bool plunder_log;
      public bool money;
      public bool food;
      public bool exploit;
      public bool technique;
      public bool general_soul;
      public bool prestige;
      public bool forces;
      public bool banner;
      public bool next_banner;
    }

    public NewPlunderResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Slogan = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Banner_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Banner_icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                Plunder_log = new List<string>();
                TList _list704 = iprot.ReadListBegin();
                for( int _i705 = 0; _i705 < _list704.Count; ++_i705)
                {
                  string _elem706 = null;
                  _elem706 = iprot.ReadString();
                  Plunder_log.Add(_elem706);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Food = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Exploit = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Technique = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              General_soul = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Prestige = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Forces = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Struct) {
              Banner = new BannerResponse();
              Banner.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Struct) {
              Next_banner = new BannerResponse();
              Next_banner.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("NewPlunderResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Slogan != null && __isset.slogan) {
        field.Name = "slogan";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Slogan);
        oprot.WriteFieldEnd();
      }
      if (Banner_name != null && __isset.banner_name) {
        field.Name = "banner_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Banner_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.banner_icon) {
        field.Name = "banner_icon";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Banner_icon);
        oprot.WriteFieldEnd();
      }
      if (Plunder_log != null && __isset.plunder_log) {
        field.Name = "plunder_log";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.String, Plunder_log.Count));
          foreach (string _iter707 in Plunder_log)
          {
            oprot.WriteString(_iter707);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.money) {
        field.Name = "money";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Money);
        oprot.WriteFieldEnd();
      }
      if (__isset.food) {
        field.Name = "food";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Food);
        oprot.WriteFieldEnd();
      }
      if (__isset.exploit) {
        field.Name = "exploit";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Exploit);
        oprot.WriteFieldEnd();
      }
      if (__isset.technique) {
        field.Name = "technique";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Technique);
        oprot.WriteFieldEnd();
      }
      if (__isset.general_soul) {
        field.Name = "general_soul";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_soul);
        oprot.WriteFieldEnd();
      }
      if (__isset.prestige) {
        field.Name = "prestige";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Prestige);
        oprot.WriteFieldEnd();
      }
      if (__isset.forces) {
        field.Name = "forces";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Forces);
        oprot.WriteFieldEnd();
      }
      if (Banner != null && __isset.banner) {
        field.Name = "banner";
        field.Type = TType.Struct;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        Banner.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (Next_banner != null && __isset.next_banner) {
        field.Name = "next_banner";
        field.Type = TType.Struct;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        Next_banner.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("NewPlunderResponse(");
      sb.Append("Slogan: ");
      sb.Append(Slogan);
      sb.Append(",Banner_name: ");
      sb.Append(Banner_name);
      sb.Append(",Banner_icon: ");
      sb.Append(Banner_icon);
      sb.Append(",Plunder_log: ");
      sb.Append(Plunder_log);
      sb.Append(",Money: ");
      sb.Append(Money);
      sb.Append(",Food: ");
      sb.Append(Food);
      sb.Append(",Exploit: ");
      sb.Append(Exploit);
      sb.Append(",Technique: ");
      sb.Append(Technique);
      sb.Append(",General_soul: ");
      sb.Append(General_soul);
      sb.Append(",Prestige: ");
      sb.Append(Prestige);
      sb.Append(",Forces: ");
      sb.Append(Forces);
      sb.Append(",Banner: ");
      sb.Append(Banner== null ? "<null>" : Banner.ToString());
      sb.Append(",Next_banner: ");
      sb.Append(Next_banner== null ? "<null>" : Next_banner.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
