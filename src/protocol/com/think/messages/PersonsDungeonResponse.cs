/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class PersonsDungeonResponse : TBase
  {
    private int _dungeon_id;
    private int _dungeon_instance_id;
    private string _dungeon_name;
    private byte _total_number;
    private byte _number;
    private int _user_id;
    private string _user_name;
    private int _prestige;
    private int _money;
    private string _items;
    private byte _item_trait;
    private bool _is_pass;
    private bool _is_contain_oneself;

    public int Dungeon_id
    {
      get
      {
        return _dungeon_id;
      }
      set
      {
        __isset.dungeon_id = true;
        this._dungeon_id = value;
      }
    }

    public int Dungeon_instance_id
    {
      get
      {
        return _dungeon_instance_id;
      }
      set
      {
        __isset.dungeon_instance_id = true;
        this._dungeon_instance_id = value;
      }
    }

    public string Dungeon_name
    {
      get
      {
        return _dungeon_name;
      }
      set
      {
        __isset.dungeon_name = true;
        this._dungeon_name = value;
      }
    }

    public byte Total_number
    {
      get
      {
        return _total_number;
      }
      set
      {
        __isset.total_number = true;
        this._total_number = value;
      }
    }

    public byte Number
    {
      get
      {
        return _number;
      }
      set
      {
        __isset.number = true;
        this._number = value;
      }
    }

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public string User_name
    {
      get
      {
        return _user_name;
      }
      set
      {
        __isset.user_name = true;
        this._user_name = value;
      }
    }

    public int Prestige
    {
      get
      {
        return _prestige;
      }
      set
      {
        __isset.prestige = true;
        this._prestige = value;
      }
    }

    public int Money
    {
      get
      {
        return _money;
      }
      set
      {
        __isset.money = true;
        this._money = value;
      }
    }

    public string Items
    {
      get
      {
        return _items;
      }
      set
      {
        __isset.items = true;
        this._items = value;
      }
    }

    public byte Item_trait
    {
      get
      {
        return _item_trait;
      }
      set
      {
        __isset.item_trait = true;
        this._item_trait = value;
      }
    }

    public bool Is_pass
    {
      get
      {
        return _is_pass;
      }
      set
      {
        __isset.is_pass = true;
        this._is_pass = value;
      }
    }

    public bool Is_contain_oneself
    {
      get
      {
        return _is_contain_oneself;
      }
      set
      {
        __isset.is_contain_oneself = true;
        this._is_contain_oneself = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool dungeon_id;
      public bool dungeon_instance_id;
      public bool dungeon_name;
      public bool total_number;
      public bool number;
      public bool user_id;
      public bool user_name;
      public bool prestige;
      public bool money;
      public bool items;
      public bool item_trait;
      public bool is_pass;
      public bool is_contain_oneself;
    }

    public PersonsDungeonResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Dungeon_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Dungeon_instance_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Dungeon_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Byte) {
              Total_number = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Byte) {
              Number = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              User_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Prestige = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              Items = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.Byte) {
              Item_trait = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Bool) {
              Is_pass = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Bool) {
              Is_contain_oneself = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PersonsDungeonResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.dungeon_id) {
        field.Name = "dungeon_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dungeon_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.dungeon_instance_id) {
        field.Name = "dungeon_instance_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dungeon_instance_id);
        oprot.WriteFieldEnd();
      }
      if (Dungeon_name != null && __isset.dungeon_name) {
        field.Name = "dungeon_name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Dungeon_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.total_number) {
        field.Name = "total_number";
        field.Type = TType.Byte;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Total_number);
        oprot.WriteFieldEnd();
      }
      if (__isset.number) {
        field.Name = "number";
        field.Type = TType.Byte;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Number);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (User_name != null && __isset.user_name) {
        field.Name = "user_name";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(User_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.prestige) {
        field.Name = "prestige";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Prestige);
        oprot.WriteFieldEnd();
      }
      if (__isset.money) {
        field.Name = "money";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Money);
        oprot.WriteFieldEnd();
      }
      if (Items != null && __isset.items) {
        field.Name = "items";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Items);
        oprot.WriteFieldEnd();
      }
      if (__isset.item_trait) {
        field.Name = "item_trait";
        field.Type = TType.Byte;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Item_trait);
        oprot.WriteFieldEnd();
      }
      if (__isset.is_pass) {
        field.Name = "is_pass";
        field.Type = TType.Bool;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Is_pass);
        oprot.WriteFieldEnd();
      }
      if (__isset.is_contain_oneself) {
        field.Name = "is_contain_oneself";
        field.Type = TType.Bool;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Is_contain_oneself);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PersonsDungeonResponse(");
      sb.Append("Dungeon_id: ");
      sb.Append(Dungeon_id);
      sb.Append(",Dungeon_instance_id: ");
      sb.Append(Dungeon_instance_id);
      sb.Append(",Dungeon_name: ");
      sb.Append(Dungeon_name);
      sb.Append(",Total_number: ");
      sb.Append(Total_number);
      sb.Append(",Number: ");
      sb.Append(Number);
      sb.Append(",User_id: ");
      sb.Append(User_id);
      sb.Append(",User_name: ");
      sb.Append(User_name);
      sb.Append(",Prestige: ");
      sb.Append(Prestige);
      sb.Append(",Money: ");
      sb.Append(Money);
      sb.Append(",Items: ");
      sb.Append(Items);
      sb.Append(",Item_trait: ");
      sb.Append(Item_trait);
      sb.Append(",Is_pass: ");
      sb.Append(Is_pass);
      sb.Append(",Is_contain_oneself: ");
      sb.Append(Is_contain_oneself);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
