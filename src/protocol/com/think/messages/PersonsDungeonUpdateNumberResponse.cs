/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class PersonsDungeonUpdateNumberResponse : TBase
  {
    private int _dungeon_id;
    private int _dungeon_instance_id;
    private byte _number;

    public int Dungeon_id
    {
      get
      {
        return _dungeon_id;
      }
      set
      {
        __isset.dungeon_id = true;
        this._dungeon_id = value;
      }
    }

    public int Dungeon_instance_id
    {
      get
      {
        return _dungeon_instance_id;
      }
      set
      {
        __isset.dungeon_instance_id = true;
        this._dungeon_instance_id = value;
      }
    }

    public byte Number
    {
      get
      {
        return _number;
      }
      set
      {
        __isset.number = true;
        this._number = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool dungeon_id;
      public bool dungeon_instance_id;
      public bool number;
    }

    public PersonsDungeonUpdateNumberResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Dungeon_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Dungeon_instance_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Byte) {
              Number = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PersonsDungeonUpdateNumberResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.dungeon_id) {
        field.Name = "dungeon_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dungeon_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.dungeon_instance_id) {
        field.Name = "dungeon_instance_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Dungeon_instance_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.number) {
        field.Name = "number";
        field.Type = TType.Byte;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Number);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PersonsDungeonUpdateNumberResponse(");
      sb.Append("Dungeon_id: ");
      sb.Append(Dungeon_id);
      sb.Append(",Dungeon_instance_id: ");
      sb.Append(Dungeon_instance_id);
      sb.Append(",Number: ");
      sb.Append(Number);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
