/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class PlayerBelleResponse : TBase
  {
    private int _instance_id;
    private int _belle_id;
    private string _name;
    private int _image_id;
    private string _speciality;
    private int _physical_power;
    private int _liking;
    private int _obedience;
    private string _belleDesc;
    private BelleEventResponse _belleEventResponse;

    public int Instance_id
    {
      get
      {
        return _instance_id;
      }
      set
      {
        __isset.instance_id = true;
        this._instance_id = value;
      }
    }

    public int Belle_id
    {
      get
      {
        return _belle_id;
      }
      set
      {
        __isset.belle_id = true;
        this._belle_id = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public int Image_id
    {
      get
      {
        return _image_id;
      }
      set
      {
        __isset.image_id = true;
        this._image_id = value;
      }
    }

    public string Speciality
    {
      get
      {
        return _speciality;
      }
      set
      {
        __isset.speciality = true;
        this._speciality = value;
      }
    }

    public int Physical_power
    {
      get
      {
        return _physical_power;
      }
      set
      {
        __isset.physical_power = true;
        this._physical_power = value;
      }
    }

    public int Liking
    {
      get
      {
        return _liking;
      }
      set
      {
        __isset.liking = true;
        this._liking = value;
      }
    }

    public int Obedience
    {
      get
      {
        return _obedience;
      }
      set
      {
        __isset.obedience = true;
        this._obedience = value;
      }
    }

    public string BelleDesc
    {
      get
      {
        return _belleDesc;
      }
      set
      {
        __isset.belleDesc = true;
        this._belleDesc = value;
      }
    }

    public BelleEventResponse BelleEventResponse
    {
      get
      {
        return _belleEventResponse;
      }
      set
      {
        __isset.belleEventResponse = true;
        this._belleEventResponse = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool instance_id;
      public bool belle_id;
      public bool name;
      public bool image_id;
      public bool speciality;
      public bool physical_power;
      public bool liking;
      public bool obedience;
      public bool belleDesc;
      public bool belleEventResponse;
    }

    public PlayerBelleResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Instance_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Belle_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Image_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Speciality = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Physical_power = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Liking = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Obedience = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              BelleDesc = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Struct) {
              BelleEventResponse = new BelleEventResponse();
              BelleEventResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PlayerBelleResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.instance_id) {
        field.Name = "instance_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Instance_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.belle_id) {
        field.Name = "belle_id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Belle_id);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (__isset.image_id) {
        field.Name = "image_id";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Image_id);
        oprot.WriteFieldEnd();
      }
      if (Speciality != null && __isset.speciality) {
        field.Name = "speciality";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Speciality);
        oprot.WriteFieldEnd();
      }
      if (__isset.physical_power) {
        field.Name = "physical_power";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Physical_power);
        oprot.WriteFieldEnd();
      }
      if (__isset.liking) {
        field.Name = "liking";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Liking);
        oprot.WriteFieldEnd();
      }
      if (__isset.obedience) {
        field.Name = "obedience";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Obedience);
        oprot.WriteFieldEnd();
      }
      if (BelleDesc != null && __isset.belleDesc) {
        field.Name = "belleDesc";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(BelleDesc);
        oprot.WriteFieldEnd();
      }
      if (BelleEventResponse != null && __isset.belleEventResponse) {
        field.Name = "belleEventResponse";
        field.Type = TType.Struct;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        BelleEventResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PlayerBelleResponse(");
      sb.Append("Instance_id: ");
      sb.Append(Instance_id);
      sb.Append(",Belle_id: ");
      sb.Append(Belle_id);
      sb.Append(",Name: ");
      sb.Append(Name);
      sb.Append(",Image_id: ");
      sb.Append(Image_id);
      sb.Append(",Speciality: ");
      sb.Append(Speciality);
      sb.Append(",Physical_power: ");
      sb.Append(Physical_power);
      sb.Append(",Liking: ");
      sb.Append(Liking);
      sb.Append(",Obedience: ");
      sb.Append(Obedience);
      sb.Append(",BelleDesc: ");
      sb.Append(BelleDesc);
      sb.Append(",BelleEventResponse: ");
      sb.Append(BelleEventResponse== null ? "<null>" : BelleEventResponse.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
