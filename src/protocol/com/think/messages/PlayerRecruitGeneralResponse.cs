/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class PlayerRecruitGeneralResponse : TBase
  {
    private byte _type;
    private List<GeneralResponse> _generalList;
    private int _generalId;
    private int _refresh_consume;
    private string _hint;
    private byte _recruit_state;
    private int _refresh_gold;

    public byte Type
    {
      get
      {
        return _type;
      }
      set
      {
        __isset.type = true;
        this._type = value;
      }
    }

    public List<GeneralResponse> GeneralList
    {
      get
      {
        return _generalList;
      }
      set
      {
        __isset.generalList = true;
        this._generalList = value;
      }
    }

    public int GeneralId
    {
      get
      {
        return _generalId;
      }
      set
      {
        __isset.generalId = true;
        this._generalId = value;
      }
    }

    public int Refresh_consume
    {
      get
      {
        return _refresh_consume;
      }
      set
      {
        __isset.refresh_consume = true;
        this._refresh_consume = value;
      }
    }

    public string Hint
    {
      get
      {
        return _hint;
      }
      set
      {
        __isset.hint = true;
        this._hint = value;
      }
    }

    public byte Recruit_state
    {
      get
      {
        return _recruit_state;
      }
      set
      {
        __isset.recruit_state = true;
        this._recruit_state = value;
      }
    }

    public int Refresh_gold
    {
      get
      {
        return _refresh_gold;
      }
      set
      {
        __isset.refresh_gold = true;
        this._refresh_gold = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool type;
      public bool generalList;
      public bool generalId;
      public bool refresh_consume;
      public bool hint;
      public bool recruit_state;
      public bool refresh_gold;
    }

    public PlayerRecruitGeneralResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              Type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                GeneralList = new List<GeneralResponse>();
                TList _list532 = iprot.ReadListBegin();
                for( int _i533 = 0; _i533 < _list532.Count; ++_i533)
                {
                  GeneralResponse _elem534 = new GeneralResponse();
                  _elem534 = new GeneralResponse();
                  _elem534.Read(iprot);
                  GeneralList.Add(_elem534);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              GeneralId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Refresh_consume = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Hint = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Byte) {
              Recruit_state = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Refresh_gold = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PlayerRecruitGeneralResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Type);
        oprot.WriteFieldEnd();
      }
      if (GeneralList != null && __isset.generalList) {
        field.Name = "generalList";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, GeneralList.Count));
          foreach (GeneralResponse _iter535 in GeneralList)
          {
            _iter535.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.generalId) {
        field.Name = "generalId";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(GeneralId);
        oprot.WriteFieldEnd();
      }
      if (__isset.refresh_consume) {
        field.Name = "refresh_consume";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Refresh_consume);
        oprot.WriteFieldEnd();
      }
      if (Hint != null && __isset.hint) {
        field.Name = "hint";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Hint);
        oprot.WriteFieldEnd();
      }
      if (__isset.recruit_state) {
        field.Name = "recruit_state";
        field.Type = TType.Byte;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Recruit_state);
        oprot.WriteFieldEnd();
      }
      if (__isset.refresh_gold) {
        field.Name = "refresh_gold";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Refresh_gold);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PlayerRecruitGeneralResponse(");
      sb.Append("Type: ");
      sb.Append(Type);
      sb.Append(",GeneralList: ");
      sb.Append(GeneralList);
      sb.Append(",GeneralId: ");
      sb.Append(GeneralId);
      sb.Append(",Refresh_consume: ");
      sb.Append(Refresh_consume);
      sb.Append(",Hint: ");
      sb.Append(Hint);
      sb.Append(",Recruit_state: ");
      sb.Append(Recruit_state);
      sb.Append(",Refresh_gold: ");
      sb.Append(Refresh_gold);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
