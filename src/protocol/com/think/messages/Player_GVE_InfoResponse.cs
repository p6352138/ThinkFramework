/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class Player_GVE_InfoResponse : TBase
  {
    private int _instance_id;
    private string _name;
    private List<PlayerInfoResponse> _playerInfo;
    private short _lvl_limit;
    private bool _clan_limit;
    private bool _gang_limit;

    public int Instance_id
    {
      get
      {
        return _instance_id;
      }
      set
      {
        __isset.instance_id = true;
        this._instance_id = value;
      }
    }

    public string Name
    {
      get
      {
        return _name;
      }
      set
      {
        __isset.name = true;
        this._name = value;
      }
    }

    public List<PlayerInfoResponse> PlayerInfo
    {
      get
      {
        return _playerInfo;
      }
      set
      {
        __isset.playerInfo = true;
        this._playerInfo = value;
      }
    }

    public short Lvl_limit
    {
      get
      {
        return _lvl_limit;
      }
      set
      {
        __isset.lvl_limit = true;
        this._lvl_limit = value;
      }
    }

    public bool Clan_limit
    {
      get
      {
        return _clan_limit;
      }
      set
      {
        __isset.clan_limit = true;
        this._clan_limit = value;
      }
    }

    public bool Gang_limit
    {
      get
      {
        return _gang_limit;
      }
      set
      {
        __isset.gang_limit = true;
        this._gang_limit = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool instance_id;
      public bool name;
      public bool playerInfo;
      public bool lvl_limit;
      public bool clan_limit;
      public bool gang_limit;
    }

    public Player_GVE_InfoResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Instance_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.List) {
              {
                PlayerInfo = new List<PlayerInfoResponse>();
                TList _list303 = iprot.ReadListBegin();
                for( int _i304 = 0; _i304 < _list303.Count; ++_i304)
                {
                  PlayerInfoResponse _elem305 = new PlayerInfoResponse();
                  _elem305 = new PlayerInfoResponse();
                  _elem305.Read(iprot);
                  PlayerInfo.Add(_elem305);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I16) {
              Lvl_limit = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              Clan_limit = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Bool) {
              Gang_limit = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Player_GVE_InfoResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.instance_id) {
        field.Name = "instance_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Instance_id);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (PlayerInfo != null && __isset.playerInfo) {
        field.Name = "playerInfo";
        field.Type = TType.List;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, PlayerInfo.Count));
          foreach (PlayerInfoResponse _iter306 in PlayerInfo)
          {
            _iter306.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.lvl_limit) {
        field.Name = "lvl_limit";
        field.Type = TType.I16;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(Lvl_limit);
        oprot.WriteFieldEnd();
      }
      if (__isset.clan_limit) {
        field.Name = "clan_limit";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Clan_limit);
        oprot.WriteFieldEnd();
      }
      if (__isset.gang_limit) {
        field.Name = "gang_limit";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Gang_limit);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("Player_GVE_InfoResponse(");
      sb.Append("Instance_id: ");
      sb.Append(Instance_id);
      sb.Append(",Name: ");
      sb.Append(Name);
      sb.Append(",PlayerInfo: ");
      sb.Append(PlayerInfo);
      sb.Append(",Lvl_limit: ");
      sb.Append(Lvl_limit);
      sb.Append(",Clan_limit: ");
      sb.Append(Clan_limit);
      sb.Append(",Gang_limit: ");
      sb.Append(Gang_limit);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
