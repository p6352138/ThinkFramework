/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class QueryPlayerGeneralDetailResponse : TBase
  {
    private int _user_id;
    private int _generalId;
    private GeneralResponse _general;
    private List<OrdnanceBagResponse> _PlayerOrdnanceBag;
    private List<BagResponse> _equipmentOnBody;
    private StarBagResponse _starBagResponse;
    private PlayerCompareResponse _playerCompareResponse;
    private PlayerCompare2Response _playerCompare2Response;
    private long _user_id_long;

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public int GeneralId
    {
      get
      {
        return _generalId;
      }
      set
      {
        __isset.generalId = true;
        this._generalId = value;
      }
    }

    public GeneralResponse General
    {
      get
      {
        return _general;
      }
      set
      {
        __isset.general = true;
        this._general = value;
      }
    }

    public List<OrdnanceBagResponse> PlayerOrdnanceBag
    {
      get
      {
        return _PlayerOrdnanceBag;
      }
      set
      {
        __isset.PlayerOrdnanceBag = true;
        this._PlayerOrdnanceBag = value;
      }
    }

    public List<BagResponse> EquipmentOnBody
    {
      get
      {
        return _equipmentOnBody;
      }
      set
      {
        __isset.equipmentOnBody = true;
        this._equipmentOnBody = value;
      }
    }

    public StarBagResponse StarBagResponse
    {
      get
      {
        return _starBagResponse;
      }
      set
      {
        __isset.starBagResponse = true;
        this._starBagResponse = value;
      }
    }

    public PlayerCompareResponse PlayerCompareResponse
    {
      get
      {
        return _playerCompareResponse;
      }
      set
      {
        __isset.playerCompareResponse = true;
        this._playerCompareResponse = value;
      }
    }

    public PlayerCompare2Response PlayerCompare2Response
    {
      get
      {
        return _playerCompare2Response;
      }
      set
      {
        __isset.playerCompare2Response = true;
        this._playerCompare2Response = value;
      }
    }

    public long User_id_long
    {
      get
      {
        return _user_id_long;
      }
      set
      {
        __isset.user_id_long = true;
        this._user_id_long = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool user_id;
      public bool generalId;
      public bool general;
      public bool PlayerOrdnanceBag;
      public bool equipmentOnBody;
      public bool starBagResponse;
      public bool playerCompareResponse;
      public bool playerCompare2Response;
      public bool user_id_long;
    }

    public QueryPlayerGeneralDetailResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              GeneralId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              General = new GeneralResponse();
              General.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                PlayerOrdnanceBag = new List<OrdnanceBagResponse>();
                TList _list552 = iprot.ReadListBegin();
                for( int _i553 = 0; _i553 < _list552.Count; ++_i553)
                {
                  OrdnanceBagResponse _elem554 = new OrdnanceBagResponse();
                  _elem554 = new OrdnanceBagResponse();
                  _elem554.Read(iprot);
                  PlayerOrdnanceBag.Add(_elem554);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                EquipmentOnBody = new List<BagResponse>();
                TList _list555 = iprot.ReadListBegin();
                for( int _i556 = 0; _i556 < _list555.Count; ++_i556)
                {
                  BagResponse _elem557 = new BagResponse();
                  _elem557 = new BagResponse();
                  _elem557.Read(iprot);
                  EquipmentOnBody.Add(_elem557);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Struct) {
              StarBagResponse = new StarBagResponse();
              StarBagResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Struct) {
              PlayerCompareResponse = new PlayerCompareResponse();
              PlayerCompareResponse.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Struct) {
              PlayerCompare2Response = new PlayerCompare2Response();
              PlayerCompare2Response.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I64) {
              User_id_long = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("QueryPlayerGeneralDetailResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.generalId) {
        field.Name = "generalId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(GeneralId);
        oprot.WriteFieldEnd();
      }
      if (General != null && __isset.general) {
        field.Name = "general";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        General.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (PlayerOrdnanceBag != null && __isset.PlayerOrdnanceBag) {
        field.Name = "PlayerOrdnanceBag";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, PlayerOrdnanceBag.Count));
          foreach (OrdnanceBagResponse _iter558 in PlayerOrdnanceBag)
          {
            _iter558.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (EquipmentOnBody != null && __isset.equipmentOnBody) {
        field.Name = "equipmentOnBody";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, EquipmentOnBody.Count));
          foreach (BagResponse _iter559 in EquipmentOnBody)
          {
            _iter559.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (StarBagResponse != null && __isset.starBagResponse) {
        field.Name = "starBagResponse";
        field.Type = TType.Struct;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        StarBagResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (PlayerCompareResponse != null && __isset.playerCompareResponse) {
        field.Name = "playerCompareResponse";
        field.Type = TType.Struct;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        PlayerCompareResponse.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (PlayerCompare2Response != null && __isset.playerCompare2Response) {
        field.Name = "playerCompare2Response";
        field.Type = TType.Struct;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        PlayerCompare2Response.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_id_long) {
        field.Name = "user_id_long";
        field.Type = TType.I64;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(User_id_long);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("QueryPlayerGeneralDetailResponse(");
      sb.Append("User_id: ");
      sb.Append(User_id);
      sb.Append(",GeneralId: ");
      sb.Append(GeneralId);
      sb.Append(",General: ");
      sb.Append(General== null ? "<null>" : General.ToString());
      sb.Append(",PlayerOrdnanceBag: ");
      sb.Append(PlayerOrdnanceBag);
      sb.Append(",EquipmentOnBody: ");
      sb.Append(EquipmentOnBody);
      sb.Append(",StarBagResponse: ");
      sb.Append(StarBagResponse== null ? "<null>" : StarBagResponse.ToString());
      sb.Append(",PlayerCompareResponse: ");
      sb.Append(PlayerCompareResponse== null ? "<null>" : PlayerCompareResponse.ToString());
      sb.Append(",PlayerCompare2Response: ");
      sb.Append(PlayerCompare2Response== null ? "<null>" : PlayerCompare2Response.ToString());
      sb.Append(",User_id_long: ");
      sb.Append(User_id_long);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
