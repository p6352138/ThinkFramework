/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class TreasuryResourceResponse : TBase
  {
    private byte _resource_type;
    private int _id1;
    private int _id2;
    private string _id3;
    private int _id4;
    private int _resource_num;
    private byte _is_receive;

    public byte Resource_type
    {
      get
      {
        return _resource_type;
      }
      set
      {
        __isset.resource_type = true;
        this._resource_type = value;
      }
    }

    public int Id1
    {
      get
      {
        return _id1;
      }
      set
      {
        __isset.id1 = true;
        this._id1 = value;
      }
    }

    public int Id2
    {
      get
      {
        return _id2;
      }
      set
      {
        __isset.id2 = true;
        this._id2 = value;
      }
    }

    public string Id3
    {
      get
      {
        return _id3;
      }
      set
      {
        __isset.id3 = true;
        this._id3 = value;
      }
    }

    public int Id4
    {
      get
      {
        return _id4;
      }
      set
      {
        __isset.id4 = true;
        this._id4 = value;
      }
    }

    public int Resource_num
    {
      get
      {
        return _resource_num;
      }
      set
      {
        __isset.resource_num = true;
        this._resource_num = value;
      }
    }

    public byte Is_receive
    {
      get
      {
        return _is_receive;
      }
      set
      {
        __isset.is_receive = true;
        this._is_receive = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool resource_type;
      public bool id1;
      public bool id2;
      public bool id3;
      public bool id4;
      public bool resource_num;
      public bool is_receive;
    }

    public TreasuryResourceResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              Resource_type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Id1 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Id2 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Id3 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Id4 = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Resource_num = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Byte) {
              Is_receive = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TreasuryResourceResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.resource_type) {
        field.Name = "resource_type";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Resource_type);
        oprot.WriteFieldEnd();
      }
      if (__isset.id1) {
        field.Name = "id1";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id1);
        oprot.WriteFieldEnd();
      }
      if (__isset.id2) {
        field.Name = "id2";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id2);
        oprot.WriteFieldEnd();
      }
      if (Id3 != null && __isset.id3) {
        field.Name = "id3";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Id3);
        oprot.WriteFieldEnd();
      }
      if (__isset.id4) {
        field.Name = "id4";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Id4);
        oprot.WriteFieldEnd();
      }
      if (__isset.resource_num) {
        field.Name = "resource_num";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Resource_num);
        oprot.WriteFieldEnd();
      }
      if (__isset.is_receive) {
        field.Name = "is_receive";
        field.Type = TType.Byte;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Is_receive);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TreasuryResourceResponse(");
      sb.Append("Resource_type: ");
      sb.Append(Resource_type);
      sb.Append(",Id1: ");
      sb.Append(Id1);
      sb.Append(",Id2: ");
      sb.Append(Id2);
      sb.Append(",Id3: ");
      sb.Append(Id3);
      sb.Append(",Id4: ");
      sb.Append(Id4);
      sb.Append(",Resource_num: ");
      sb.Append(Resource_num);
      sb.Append(",Is_receive: ");
      sb.Append(Is_receive);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
