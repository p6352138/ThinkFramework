/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class TurnplateRankingListResponse : TBase
  {
    private byte _Ranking_type;
    private List<TurnplateRankingResponse> _ranking_list;
    private TurnplateRankingResponse _last_msg;

    public byte Ranking_type
    {
      get
      {
        return _Ranking_type;
      }
      set
      {
        __isset.Ranking_type = true;
        this._Ranking_type = value;
      }
    }

    public List<TurnplateRankingResponse> Ranking_list
    {
      get
      {
        return _ranking_list;
      }
      set
      {
        __isset.ranking_list = true;
        this._ranking_list = value;
      }
    }

    public TurnplateRankingResponse Last_msg
    {
      get
      {
        return _last_msg;
      }
      set
      {
        __isset.last_msg = true;
        this._last_msg = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool Ranking_type;
      public bool ranking_list;
      public bool last_msg;
    }

    public TurnplateRankingListResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              Ranking_type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                Ranking_list = new List<TurnplateRankingResponse>();
                TList _list596 = iprot.ReadListBegin();
                for( int _i597 = 0; _i597 < _list596.Count; ++_i597)
                {
                  TurnplateRankingResponse _elem598 = new TurnplateRankingResponse();
                  _elem598 = new TurnplateRankingResponse();
                  _elem598.Read(iprot);
                  Ranking_list.Add(_elem598);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              Last_msg = new TurnplateRankingResponse();
              Last_msg.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TurnplateRankingListResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.Ranking_type) {
        field.Name = "Ranking_type";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Ranking_type);
        oprot.WriteFieldEnd();
      }
      if (Ranking_list != null && __isset.ranking_list) {
        field.Name = "ranking_list";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, Ranking_list.Count));
          foreach (TurnplateRankingResponse _iter599 in Ranking_list)
          {
            _iter599.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (Last_msg != null && __isset.last_msg) {
        field.Name = "last_msg";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        Last_msg.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TurnplateRankingListResponse(");
      sb.Append("Ranking_type: ");
      sb.Append(Ranking_type);
      sb.Append(",Ranking_list: ");
      sb.Append(Ranking_list);
      sb.Append(",Last_msg: ");
      sb.Append(Last_msg== null ? "<null>" : Last_msg.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}
