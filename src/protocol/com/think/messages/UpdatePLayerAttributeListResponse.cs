/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class UpdatePLayerAttributeListResponse : TBase
  {
    private List<UpdatePlayerAttributeResponse> _attrList;

    public List<UpdatePlayerAttributeResponse> AttrList
    {
      get
      {
        return _attrList;
      }
      set
      {
        __isset.attrList = true;
        this._attrList = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool attrList;
    }

    public UpdatePLayerAttributeListResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                AttrList = new List<UpdatePlayerAttributeResponse>();
                TList _list254 = iprot.ReadListBegin();
                for( int _i255 = 0; _i255 < _list254.Count; ++_i255)
                {
                  UpdatePlayerAttributeResponse _elem256 = new UpdatePlayerAttributeResponse();
                  _elem256 = new UpdatePlayerAttributeResponse();
                  _elem256.Read(iprot);
                  AttrList.Add(_elem256);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("UpdatePLayerAttributeListResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (AttrList != null && __isset.attrList) {
        field.Name = "attrList";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, AttrList.Count));
          foreach (UpdatePlayerAttributeResponse _iter257 in AttrList)
          {
            _iter257.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("UpdatePLayerAttributeListResponse(");
      sb.Append("AttrList: ");
      sb.Append(AttrList);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
