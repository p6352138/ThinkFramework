/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace com.think.messages
{

  [Serializable]
  public partial class WorldCollectResponse : TBase
  {
    private int _mapID;
    private int _money;
    private int _food;
    private int _forces;
    private int _exploit;
    private int _technique;
    private int _prestige;
    private int _general_soul;
    private int _user_id;
    private string _banner_name;
    private int _banner_icon;
    private byte _output_type;
    private byte _garrison_type;

    public int MapID
    {
      get
      {
        return _mapID;
      }
      set
      {
        __isset.mapID = true;
        this._mapID = value;
      }
    }

    public int Money
    {
      get
      {
        return _money;
      }
      set
      {
        __isset.money = true;
        this._money = value;
      }
    }

    public int Food
    {
      get
      {
        return _food;
      }
      set
      {
        __isset.food = true;
        this._food = value;
      }
    }

    public int Forces
    {
      get
      {
        return _forces;
      }
      set
      {
        __isset.forces = true;
        this._forces = value;
      }
    }

    public int Exploit
    {
      get
      {
        return _exploit;
      }
      set
      {
        __isset.exploit = true;
        this._exploit = value;
      }
    }

    public int Technique
    {
      get
      {
        return _technique;
      }
      set
      {
        __isset.technique = true;
        this._technique = value;
      }
    }

    public int Prestige
    {
      get
      {
        return _prestige;
      }
      set
      {
        __isset.prestige = true;
        this._prestige = value;
      }
    }

    public int General_soul
    {
      get
      {
        return _general_soul;
      }
      set
      {
        __isset.general_soul = true;
        this._general_soul = value;
      }
    }

    public int User_id
    {
      get
      {
        return _user_id;
      }
      set
      {
        __isset.user_id = true;
        this._user_id = value;
      }
    }

    public string Banner_name
    {
      get
      {
        return _banner_name;
      }
      set
      {
        __isset.banner_name = true;
        this._banner_name = value;
      }
    }

    public int Banner_icon
    {
      get
      {
        return _banner_icon;
      }
      set
      {
        __isset.banner_icon = true;
        this._banner_icon = value;
      }
    }

    public byte Output_type
    {
      get
      {
        return _output_type;
      }
      set
      {
        __isset.output_type = true;
        this._output_type = value;
      }
    }

    public byte Garrison_type
    {
      get
      {
        return _garrison_type;
      }
      set
      {
        __isset.garrison_type = true;
        this._garrison_type = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool mapID;
      public bool money;
      public bool food;
      public bool forces;
      public bool exploit;
      public bool technique;
      public bool prestige;
      public bool general_soul;
      public bool user_id;
      public bool banner_name;
      public bool banner_icon;
      public bool output_type;
      public bool garrison_type;
    }

    public WorldCollectResponse() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              MapID = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Money = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              Food = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              Forces = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Exploit = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Technique = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              Prestige = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              General_soul = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              User_id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              Banner_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Banner_icon = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Byte) {
              Output_type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Byte) {
              Garrison_type = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("WorldCollectResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.mapID) {
        field.Name = "mapID";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(MapID);
        oprot.WriteFieldEnd();
      }
      if (__isset.money) {
        field.Name = "money";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Money);
        oprot.WriteFieldEnd();
      }
      if (__isset.food) {
        field.Name = "food";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Food);
        oprot.WriteFieldEnd();
      }
      if (__isset.forces) {
        field.Name = "forces";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Forces);
        oprot.WriteFieldEnd();
      }
      if (__isset.exploit) {
        field.Name = "exploit";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Exploit);
        oprot.WriteFieldEnd();
      }
      if (__isset.technique) {
        field.Name = "technique";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Technique);
        oprot.WriteFieldEnd();
      }
      if (__isset.prestige) {
        field.Name = "prestige";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Prestige);
        oprot.WriteFieldEnd();
      }
      if (__isset.general_soul) {
        field.Name = "general_soul";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(General_soul);
        oprot.WriteFieldEnd();
      }
      if (__isset.user_id) {
        field.Name = "user_id";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(User_id);
        oprot.WriteFieldEnd();
      }
      if (Banner_name != null && __isset.banner_name) {
        field.Name = "banner_name";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Banner_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.banner_icon) {
        field.Name = "banner_icon";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Banner_icon);
        oprot.WriteFieldEnd();
      }
      if (__isset.output_type) {
        field.Name = "output_type";
        field.Type = TType.Byte;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Output_type);
        oprot.WriteFieldEnd();
      }
      if (__isset.garrison_type) {
        field.Name = "garrison_type";
        field.Type = TType.Byte;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(Garrison_type);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("WorldCollectResponse(");
      sb.Append("MapID: ");
      sb.Append(MapID);
      sb.Append(",Money: ");
      sb.Append(Money);
      sb.Append(",Food: ");
      sb.Append(Food);
      sb.Append(",Forces: ");
      sb.Append(Forces);
      sb.Append(",Exploit: ");
      sb.Append(Exploit);
      sb.Append(",Technique: ");
      sb.Append(Technique);
      sb.Append(",Prestige: ");
      sb.Append(Prestige);
      sb.Append(",General_soul: ");
      sb.Append(General_soul);
      sb.Append(",User_id: ");
      sb.Append(User_id);
      sb.Append(",Banner_name: ");
      sb.Append(Banner_name);
      sb.Append(",Banner_icon: ");
      sb.Append(Banner_icon);
      sb.Append(",Output_type: ");
      sb.Append(Output_type);
      sb.Append(",Garrison_type: ");
      sb.Append(Garrison_type);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
